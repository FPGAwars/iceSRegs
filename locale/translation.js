// Translation document for the collection
// =======================================
// This file contains the texts
// annotated for translation
//
// Instructions:
// 1. Open the PO file with Poedit
// 2. Press "Update" to update from sources

gettext('Left');
gettext('Left-Right');
gettext('Right');
gettext('SL');
gettext('SL-ld');
gettext('SL-ld-rst');
gettext('SL-rst');
gettext('Sys-SL');
gettext('Sys-SL-ld');
gettext('Sys-SL-ld-rst');
gettext('Sys-SL-rst');
gettext('SLR');
gettext('SLR-ld');
gettext('SLR-ld-rst');
gettext('SLR-rst');
gettext('Sys-SLR');
gettext('Sys-SLR-ld');
gettext('Sys-SLR-ld-rst');
gettext('Sys-SLR-rst');
gettext('Blocks');
gettext('02-SLR');
gettext('02-SLR: 2 bits shift left right register. Verilog implementation');
gettext('03-SLR');
gettext('03-SLR: 3 bits shift left right register. Verilog implementation');
gettext('04-SLR');
gettext('04-SLR: 4 bits shift left right register. Verilog implementation');
gettext('05-SLR');
gettext('05-SLR: 5 bits shift left right register. Verilog implementation');
gettext('06-SLR');
gettext('06-SLR: 6 bits shift left right register. Verilog implementation');
gettext('07-SLR');
gettext('07-SLR: 7 bits shift left right register. Verilog implementation');
gettext('08-SLR');
gettext('08-SLR: 8 bits shift left right register. Verilog implementation');
gettext('09-SLR');
gettext('09-SLR: 9 bits shift left right register. Verilog implementation');
gettext('10-SLR');
gettext('10-SLR: 10 bits shift left right register. Verilog implementation');
gettext('11-SLR');
gettext('11-SLR: 11 bits shift left right register. Verilog implementation');
gettext('12-SLR');
gettext('12-SLR: 12 bits shift left right register. Verilog implementation');
gettext('13-SLR');
gettext('13-SLR: 13 bits shift left right register. Verilog implementation');
gettext('14-SLR');
gettext('14-SLR: 14 bits shift left right register. Verilog implementation');
gettext('15-SLR');
gettext('15-SLR: 15 bits shift left right register. Verilog implementation');
gettext('16-SLR');
gettext('16-SLR: 16 bits shift left right register. Verilog implementation');
gettext('17-SLR');
gettext('17-SLR: 17 bits shift left right register. Verilog implementation');
gettext('18-SLR');
gettext('18-SLR: 18 bits shift left right register. Verilog implementation');
gettext('19-SLR');
gettext('19-SLR: 19 bits shift left right register. Verilog implementation');
gettext('20-SLR');
gettext('20-SLR: 20 bits shift left right register. Verilog implementation');
gettext('21-SLR');
gettext('21-SLR: 21 bits shift left right register. Verilog implementation');
gettext('22-SLR');
gettext('22-SLR: 22 bits shift left right register. Verilog implementation');
gettext('23-SLR');
gettext('23-SLR: 23 bits shift left right register. Verilog implementation');
gettext('24-SLR');
gettext('24-SLR: 24 bits shift left right register. Verilog implementation');
gettext('25-SLR');
gettext('25-SLR: 25 bits shift left right register. Verilog implementation');
gettext('26-SLR');
gettext('26-SLR: 26 bits shift left right register. Verilog implementation');
gettext('27-SLR');
gettext('27-SLR: 27 bits shift left right register. Verilog implementation');
gettext('28-SLR');
gettext('28-SLR: 28 bits shift left right register. Verilog implementation');
gettext('29-SLR');
gettext('29-SLR: 29 bits shift left right register. Verilog implementation');
gettext('30-SLR');
gettext('30-SLR: 30 bits shift left right register. Verilog implementation');
gettext('31-SLR');
gettext('31-SLR: 31 bits shift left right register. Verilog implementation');
gettext('32-SLR');
gettext('32-SLR: 32 bits shift left right register. Verilog implementation');
gettext('Blocks');
gettext('02-SLR-ld');
gettext('02-SLR-ld: 2 bits shift left right register with load. Verilog implementation');
gettext('03-SLR-ld');
gettext('03-SLR-ld: 3 bits shift left right register with load. Verilog implementation');
gettext('04-SLR-ld');
gettext('04-SLR-ld: 4 bits shift left right register with load. Verilog implementation');
gettext('05-SLR-ld');
gettext('05-SLR-ld: 5 bits shift left right register with load. Verilog implementation');
gettext('06-SLR-ld');
gettext('06-SLR-ld: 6 bits shift left right register with load. Verilog implementation');
gettext('07-SLR-ld');
gettext('07-SLR-ld: 7 bits shift left right register with load. Verilog implementation');
gettext('08-SLR-ld');
gettext('08-SLR-ld: 8 bits shift left right register with load. Verilog implementation');
gettext('09-SLR-ld');
gettext('09-SLR-ld: 9 bits shift left right register with load. Verilog implementation');
gettext('10-SLR-ld');
gettext('10-SLR-ld: 10 bits shift left right register with load. Verilog implementation');
gettext('11-SLR-ld');
gettext('11-SLR-ld: 11 bits shift left right register with load. Verilog implementation');
gettext('12-SLR-ld');
gettext('12-SLR-ld: 12 bits shift left right register with load. Verilog implementation');
gettext('13-SLR-ld');
gettext('13-SLR-ld: 13 bits shift left right register with load. Verilog implementation');
gettext('14-SLR-ld');
gettext('14-SLR-ld: 14 bits shift left right register with load. Verilog implementation');
gettext('15-SLR-ld');
gettext('15-SLR-ld: 15 bits shift left right register with load. Verilog implementation');
gettext('16-SLR-ld');
gettext('16-SLR-ld: 16 bits shift left right register with load. Verilog implementation');
gettext('17-SLR-ld');
gettext('17-SLR-ld: 17 bits shift left right register with load. Verilog implementation');
gettext('18-SLR-ld');
gettext('18-SLR-ld: 18 bits shift left right register with load. Verilog implementation');
gettext('19-SLR-ld');
gettext('19-SLR-ld: 19 bits shift left right register with load. Verilog implementation');
gettext('20-SLR-ld');
gettext('20-SLR-ld: 20 bits shift left right register with load. Verilog implementation');
gettext('21-SLR-ld');
gettext('21-SLR-ld: 21 bits shift left right register with load. Verilog implementation');
gettext('22-SLR-ld');
gettext('22-SLR-ld: 22 bits shift left right register with load. Verilog implementation');
gettext('23-SLR-ld');
gettext('23-SLR-ld: 23 bits shift left right register with load. Verilog implementation');
gettext('24-SLR-ld');
gettext('24-SLR-ld: 24 bits shift left right register with load. Verilog implementation');
gettext('25-SLR-ld');
gettext('25-SLR-ld: 25 bits shift left right register with load. Verilog implementation');
gettext('26-SLR-ld');
gettext('26-SLR-ld: 26 bits shift left right register with load. Verilog implementation');
gettext('27-SLR-ld');
gettext('27-SLR-ld: 27 bits shift left right register with load. Verilog implementation');
gettext('28-SLR-ld');
gettext('28-SLR-ld: 28 bits shift left right register with load. Verilog implementation');
gettext('29-SLR-ld');
gettext('29-SLR-ld: 29 bits shift left right register with load. Verilog implementation');
gettext('30-SLR-ld');
gettext('30-SLR-ld: 30 bits shift left right register with load. Verilog implementation');
gettext('31-SLR-ld');
gettext('31-SLR-ld: 31 bits shift left right register with load. Verilog implementation');
gettext('32-SLR-ld');
gettext('32-SLR-ld: 32 bits shift left right register with load. Verilog implementation');
gettext('Blocks');
gettext('02-SLR-ld-rst');
gettext('02-SLR-ld-rst: 2 bits shift left right register with load and reset. Verilog implementation');
gettext('03-SLR-ld-rst');
gettext('03-SLR-ld-rst: 3 bits shift left right register with load and reset. Verilog implementation');
gettext('04-SLR-ld-rst');
gettext('04-SLR-ld-rst: 4 bits shift left right register with load and reset. Verilog implementation');
gettext('05-SLR-ld-rst');
gettext('05-SLR-ld-rst: 5 bits shift left right register with load and reset. Verilog implementation');
gettext('06-SLR-ld-rst');
gettext('06-SLR-ld-rst: 6 bits shift left right register with load and reset. Verilog implementation');
gettext('07-SLR-ld-rst');
gettext('07-SLR-ld-rst: 7 bits shift left right register with load and reset. Verilog implementation');
gettext('08-SLR-ld-rst');
gettext('08-SLR-ld-rst: 8 bits shift left right register with load and reset. Verilog implementation');
gettext('09-SLR-ld-rst');
gettext('09-SLR-ld-rst: 9 bits shift left right register with load and reset. Verilog implementation');
gettext('10-SLR-ld-rst');
gettext('10-SLR-ld-rst: 10 bits shift left right register with load and reset. Verilog implementation');
gettext('11-SLR-ld-rst');
gettext('11-SLR-ld-rst: 11 bits shift left right register with load and reset. Verilog implementation');
gettext('12-SLR-ld-rst');
gettext('12-SLR-ld-rst: 12 bits shift left right register with load and reset. Verilog implementation');
gettext('13-SLR-ld-rst');
gettext('13-SLR-ld-rst: 13 bits shift left right register with load and reset. Verilog implementation');
gettext('14-SLR-ld-rst');
gettext('14-SLR-ld-rst: 14 bits shift left right register with load and reset. Verilog implementation');
gettext('15-SLR-ld-rst');
gettext('15-SLR-ld-rst: 15 bits shift left right register with load and reset. Verilog implementation');
gettext('16-SLR-ld-rst');
gettext('16-SLR-ld-rst: 16 bits shift left right register with load and reset. Verilog implementation');
gettext('17-SLR-ld-rst');
gettext('17-SLR-ld-rst: 17 bits shift left right register with load and reset. Verilog implementation');
gettext('18-SLR-ld-rst');
gettext('18-SLR-ld-rst: 18 bits shift left right register with load and reset. Verilog implementation');
gettext('19-SLR-ld-rst');
gettext('19-SLR-ld-rst: 19 bits shift left right register with load and reset. Verilog implementation');
gettext('20-SLR-ld-rst');
gettext('20-SLR-ld-rst: 20 bits shift left right register with load and reset. Verilog implementation');
gettext('21-SLR-ld-rst');
gettext('21-SLR-ld-rst: 21 bits shift left right register with load and reset. Verilog implementation');
gettext('22-SLR-ld-rst');
gettext('22-SLR-ld-rst: 22 bits shift left right register with load and reset. Verilog implementation');
gettext('23-SLR-ld-rst');
gettext('23-SLR-ld-rst: 23 bits shift left right register with load and reset. Verilog implementation');
gettext('24-SLR-ld-rst');
gettext('24-SLR-ld-rst: 24 bits shift left right register with load and reset. Verilog implementation');
gettext('25-SLR-ld-rst');
gettext('25-SLR-ld-rst: 25 bits shift left right register with load and reset. Verilog implementation');
gettext('26-SLR-ld-rst');
gettext('26-SLR-ld-rst: 26 bits shift left right register with load and reset. Verilog implementation');
gettext('27-SLR-ld-rst');
gettext('27-SLR-ld-rst: 27 bits shift left right register with load and reset. Verilog implementation');
gettext('28-SLR-ld-rst');
gettext('28-SLR-ld-rst: 28 bits shift left right register with load and reset. Verilog implementation');
gettext('29-SLR-ld-rst');
gettext('29-SLR-ld-rst: 29 bits shift left right register with load and reset. Verilog implementation');
gettext('30-SLR-ld-rst');
gettext('30-SLR-ld-rst: 30 bits shift left right register with load and reset. Verilog implementation');
gettext('31-SLR-ld-rst');
gettext('31-SLR-ld-rst: 31 bits shift left right register with load and reset. Verilog implementation');
gettext('32-SLR-ld-rst');
gettext('32-SLR-ld-rst: 32 bits shift left right register with load and reset. Verilog implementation');
gettext('02-SLR-ld-rst-imp1');
gettext('02-SLR-ld-rst-imp1: 2 bits shift left right register with load and reset. Block implementation 1');
gettext('Bus2-Split-all: Split the 2-bits bus into two wires');
gettext('SR1-2bits-verilog: Shift  a 2-bit value one bit right. MSB is filled with in. Verilog implementation');
gettext('2-to-1 Multplexer (2-bit channels). Verilog implementation');
gettext('SL1-2-verilog: Shift  a 2-bit value one bit left. LSB is filled with 'in' and the MSB is written to out . Verilog implementation');
gettext('OR2: Two bits input OR gate');
gettext('02-Reg-rst: 2 bits Register with reset. Verilog implementation');
gettext('Shift to the right');
gettext('Shift to the left');
gettext('02-SLR-ld-rst-imp2');
gettext('02-SLR-ld-rst-imp2: 2 bits shift left right register with load and reset. Block implementation 2');
gettext('Bus2-Join-all: Joint two wires into a 2-bits Bus');
gettext('2-to-1 Multplexer (1-bit channels). Verilog implementation');
gettext('DFF-rst. D Flip-Flop with load and reset. Implemented in verilog');
gettext('02-SLR-ld-imp1');
gettext('02-SLR-ld-imp1: 2 bits shift left right register with load. Block implementation 1');
gettext('02-Reg: 2 bits Register. Verilog implementation');
gettext('02-SLR-ld-imp2');
gettext('02-SLR-ld-imp2: 2 bits shift left right register with load. Block implementation 2');
gettext('DFF. D Flip-flop. Verilog implementation');
gettext('Blocks');
gettext('02-SLR-rst');
gettext('02-SLR-rst: 2 bits shift left right register with reset. Verilog implementation');
gettext('03-SLR-rst');
gettext('03-SLR-rst: 3 bits shift left right register with reset. Verilog implementation');
gettext('04-SLR-rst');
gettext('04-SLR-rst: 4 bits shift left right register with reset. Verilog implementation');
gettext('05-SLR-rst');
gettext('05-SLR-rst: 5 bits shift left right register with reset. Verilog implementation');
gettext('06-SLR-rst');
gettext('06-SLR-rst: 6 bits shift left right register with reset. Verilog implementation');
gettext('07-SLR-rst');
gettext('07-SLR-rst: 7 bits shift left right register with reset. Verilog implementation');
gettext('08-SLR-rst');
gettext('08-SLR-rst: 8 bits shift left right register with reset. Verilog implementation');
gettext('09-SLR-rst');
gettext('09-SLR-rst: 9 bits shift left right register with reset. Verilog implementation');
gettext('10-SLR-rst');
gettext('10-SLR-rst: 10 bits shift left right register with reset. Verilog implementation');
gettext('11-SLR-rst');
gettext('11-SLR-rst: 11 bits shift left right register with reset. Verilog implementation');
gettext('12-SLR-rst');
gettext('12-SLR-rst: 12 bits shift left right register with reset. Verilog implementation');
gettext('13-SLR-rst');
gettext('13-SLR-rst: 13 bits shift left right register with reset. Verilog implementation');
gettext('14-SLR-rst');
gettext('14-SLR-rst: 14 bits shift left right register with reset. Verilog implementation');
gettext('15-SLR-rst');
gettext('15-SLR-rst: 15 bits shift left right register with reset. Verilog implementation');
gettext('16-SLR-rst');
gettext('16-SLR-rst: 16 bits shift left right register with reset. Verilog implementation');
gettext('17-SLR-rst');
gettext('17-SLR-rst: 17 bits shift left right register with reset. Verilog implementation');
gettext('18-SLR-rst');
gettext('18-SLR-rst: 18 bits shift left right register with reset. Verilog implementation');
gettext('19-SLR-rst');
gettext('19-SLR-rst: 19 bits shift left right register with reset. Verilog implementation');
gettext('20-SLR-rst');
gettext('20-SLR-rst: 20 bits shift left right register with reset. Verilog implementation');
gettext('21-SLR-rst');
gettext('21-SLR-rst: 21 bits shift left right register with reset. Verilog implementation');
gettext('22-SLR-rst');
gettext('22-SLR-rst: 22 bits shift left right register with reset. Verilog implementation');
gettext('23-SLR-rst');
gettext('23-SLR-rst: 23 bits shift left right register with reset. Verilog implementation');
gettext('24-SLR-rst');
gettext('24-SLR-rst: 24 bits shift left right register with reset. Verilog implementation');
gettext('25-SLR-rst');
gettext('25-SLR-rst: 25 bits shift left right register with reset. Verilog implementation');
gettext('26-SLR-rst');
gettext('26-SLR-rst: 26 bits shift left right register with reset. Verilog implementation');
gettext('27-SLR-rst');
gettext('27-SLR-rst: 27 bits shift left right register with reset. Verilog implementation');
gettext('28-SLR-rst');
gettext('28-SLR-rst: 28 bits shift left right register with reset. Verilog implementation');
gettext('29-SLR-rst');
gettext('29-SLR-rst: 29 bits shift left right register with reset. Verilog implementation');
gettext('30-SLR-rst');
gettext('30-SLR-rst: 30 bits shift left right register with reset. Verilog implementation');
gettext('31-SLR-rst');
gettext('31-SLR-rst: 31 bits shift left right register with reset. Verilog implementation');
gettext('32-SLR-rst');
gettext('32-SLR-rst: 32 bits shift left right register with reset. Verilog implementation');
gettext('02-SLR-rst-imp1');
gettext('02-SLR-rst-imp1: 2 bits shift left right register with reset. Block implementation 1');
gettext('02-SLR-rst-imp2');
gettext('02-SLR-rst-imp2: 2 bits shift left right register with reset. Block implementation 2');
gettext('02-SLR-imp1');
gettext('02-SLR-imp1: 2 bits shift left right register. Block implementation 1');
gettext('02-SLR-imp2');
gettext('02-SLR-imp2: 2 bits shift left right register. Block implementation 2');
gettext('Blocks');
gettext('02-Sys-SLR');
gettext('02-Sys-SLR: 2 bits system shift left right register. Verilog implementation');
gettext('03-Sys-SLR');
gettext('03-Sys-SLR: 3 bits system shift left right register. Verilog implementation');
gettext('04-Sys-SLR');
gettext('04-Sys-SLR: 4 bits system shift left right register. Verilog implementation');
gettext('05-Sys-SLR');
gettext('05-Sys-SLR: 5 bits system shift left right register. Verilog implementation');
gettext('06-Sys-SLR');
gettext('06-Sys-SLR: 6 bits system shift left right register. Verilog implementation');
gettext('07-Sys-SLR');
gettext('07-Sys-SLR: 7 bits system shift left right register. Verilog implementation');
gettext('08-Sys-SLR');
gettext('08-Sys-SLR: 8 bits system shift left right register. Verilog implementation');
gettext('09-Sys-SLR');
gettext('09-Sys-SLR: 9 bits system shift left right register. Verilog implementation');
gettext('10-Sys-SLR');
gettext('10-Sys-SLR: 10 bits system shift left right register. Verilog implementation');
gettext('11-Sys-SLR');
gettext('11-Sys-SLR: 11 bits system shift left right register. Verilog implementation');
gettext('12-Sys-SLR');
gettext('12-Sys-SLR: 12 bits system shift left right register. Verilog implementation');
gettext('13-Sys-SLR');
gettext('13-Sys-SLR: 13 bits system shift left right register. Verilog implementation');
gettext('14-Sys-SLR');
gettext('14-Sys-SLR: 14 bits system shift left right register. Verilog implementation');
gettext('15-Sys-SLR');
gettext('15-Sys-SLR: 15 bits system shift left right register. Verilog implementation');
gettext('16-Sys-SLR');
gettext('16-Sys-SLR: 16 bits system shift left right register. Verilog implementation');
gettext('17-Sys-SLR');
gettext('17-Sys-SLR: 17 bits system shift left right register. Verilog implementation');
gettext('18-Sys-SLR');
gettext('18-Sys-SLR: 18 bits system shift left right register. Verilog implementation');
gettext('19-Sys-SLR');
gettext('19-Sys-SLR: 19 bits system shift left right register. Verilog implementation');
gettext('20-Sys-SLR');
gettext('20-Sys-SLR: 20 bits system shift left right register. Verilog implementation');
gettext('21-Sys-SLR');
gettext('21-Sys-SLR: 21 bits system shift left right register. Verilog implementation');
gettext('22-Sys-SLR');
gettext('22-Sys-SLR: 22 bits system shift left right register. Verilog implementation');
gettext('23-Sys-SLR');
gettext('23-Sys-SLR: 23 bits system shift left right register. Verilog implementation');
gettext('24-Sys-SLR');
gettext('24-Sys-SLR: 24 bits system shift left right register. Verilog implementation');
gettext('25-Sys-SLR');
gettext('25-Sys-SLR: 25 bits system shift left right register. Verilog implementation');
gettext('26-Sys-SLR');
gettext('26-Sys-SLR: 26 bits system shift left right register. Verilog implementation');
gettext('27-Sys-SLR');
gettext('27-Sys-SLR: 27 bits system shift left right register. Verilog implementation');
gettext('28-Sys-SLR');
gettext('28-Sys-SLR: 28 bits system shift left right register. Verilog implementation');
gettext('29-Sys-SLR');
gettext('29-Sys-SLR: 29 bits system shift left right register. Verilog implementation');
gettext('30-Sys-SLR');
gettext('30-Sys-SLR: 30 bits system shift left right register. Verilog implementation');
gettext('31-Sys-SLR');
gettext('31-Sys-SLR: 31 bits system shift left right register. Verilog implementation');
gettext('32-Sys-SLR');
gettext('32-Sys-SLR: 32 bits system shift left right register. Verilog implementation');
gettext('Blocks');
gettext('02-Sys-SLR-ld');
gettext('02-Sys-SLR-ld: 2 bits system shift left right register with load input. Verilog implementation');
gettext('03-Sys-SLR-ld');
gettext('03-Sys-SLR-ld: 3 bits system shift left right register with load input. Verilog implementation');
gettext('04-Sys-SLR-ld');
gettext('04-Sys-SLR-ld: 4 bits system shift left right register with load input. Verilog implementation');
gettext('05-Sys-SLR-ld');
gettext('05-Sys-SLR-ld: 5 bits system shift left right register with load input. Verilog implementation');
gettext('06-Sys-SLR-ld');
gettext('06-Sys-SLR-ld: 6 bits system shift left right register with load input. Verilog implementation');
gettext('07-Sys-SLR-ld');
gettext('07-Sys-SLR-ld: 7 bits system shift left right register with load input. Verilog implementation');
gettext('08-Sys-SLR-ld');
gettext('08-Sys-SLR-ld: 8 bits system shift left right register with load input. Verilog implementation');
gettext('09-Sys-SLR-ld');
gettext('09-Sys-SLR-ld: 9 bits system shift left right register with load input. Verilog implementation');
gettext('10-Sys-SLR-ld');
gettext('10-Sys-SLR-ld: 10 bits system shift left right register with load input. Verilog implementation');
gettext('11-Sys-SLR-ld');
gettext('11-Sys-SLR-ld: 11 bits system shift left right register with load input. Verilog implementation');
gettext('12-Sys-SLR-ld');
gettext('12-Sys-SLR-ld: 12 bits system shift left right register with load input. Verilog implementation');
gettext('13-Sys-SLR-ld');
gettext('13-Sys-SLR-ld: 13 bits system shift left right register with load input. Verilog implementation');
gettext('14-Sys-SLR-ld');
gettext('14-Sys-SLR-ld: 14 bits system shift left right register with load input. Verilog implementation');
gettext('15-Sys-SLR-ld');
gettext('15-Sys-SLR-ld: 15 bits system shift left right register with load input. Verilog implementation');
gettext('16-Sys-SLR-ld');
gettext('16-Sys-SLR-ld: 16 bits system shift left right register with load input. Verilog implementation');
gettext('17-Sys-SLR-ld');
gettext('17-Sys-SLR-ld: 17 bits system shift left right register with load input. Verilog implementation');
gettext('18-Sys-SLR-ld');
gettext('18-Sys-SLR-ld: 18 bits system shift left right register with load input. Verilog implementation');
gettext('19-Sys-SLR-ld');
gettext('19-Sys-SLR-ld: 19 bits system shift left right register with load input. Verilog implementation');
gettext('20-Sys-SLR-ld');
gettext('20-Sys-SLR-ld: 20 bits system shift left right register with load input. Verilog implementation');
gettext('21-Sys-SLR-ld');
gettext('21-Sys-SLR-ld: 21 bits system shift left right register with load input. Verilog implementation');
gettext('22-Sys-SLR-ld');
gettext('22-Sys-SLR-ld: 22 bits system shift left right register with load input. Verilog implementation');
gettext('23-Sys-SLR-ld');
gettext('23-Sys-SLR-ld: 23 bits system shift left right register with load input. Verilog implementation');
gettext('24-Sys-SLR-ld');
gettext('24-Sys-SLR-ld: 24 bits system shift left right register with load input. Verilog implementation');
gettext('25-Sys-SLR-ld');
gettext('25-Sys-SLR-ld: 25 bits system shift left right register with load input. Verilog implementation');
gettext('26-Sys-SLR-ld');
gettext('26-Sys-SLR-ld: 26 bits system shift left right register with load input. Verilog implementation');
gettext('27-Sys-SLR-ld');
gettext('27-Sys-SLR-ld: 27 bits system shift left right register with load input. Verilog implementation');
gettext('28-Sys-SLR-ld');
gettext('28-Sys-SLR-ld: 28 bits system shift left right register with load input. Verilog implementation');
gettext('29-Sys-SLR-ld');
gettext('29-Sys-SLR-ld: 29 bits system shift left right register with load input. Verilog implementation');
gettext('30-Sys-SLR-ld');
gettext('30-Sys-SLR-ld: 30 bits system shift left right register with load input. Verilog implementation');
gettext('31-Sys-SLR-ld');
gettext('31-Sys-SLR-ld: 31 bits system shift left right register with load input. Verilog implementation');
gettext('32-Sys-SLR-ld');
gettext('32-Sys-SLR-ld: 32 bits system shift left right register with load input. Verilog implementation');
gettext('Blocks');
gettext('02-Sys-SLR-ld-rst');
gettext('02-Sys-SLR-ld-rst: 2 bits system shift left right register with load and reset. Verilog implementation');
gettext('03-Sys-SLR-ld-rst');
gettext('03-Sys-SLR-ld-rst: 3 bits system shift left right register with load and reset. Verilog implementation');
gettext('04-Sys-SLR-ld-rst');
gettext('04-Sys-SLR-ld-rst: 4 bits system shift left right register with load and reset. Verilog implementation');
gettext('05-Sys-SLR-ld-rst');
gettext('05-Sys-SLR-ld-rst: 5 bits system shift left right register with load and reset. Verilog implementation');
gettext('06-Sys-SLR-ld-rst');
gettext('06-Sys-SLR-ld-rst: 6 bits system shift left right register with load and reset. Verilog implementation');
gettext('07-Sys-SLR-ld-rst');
gettext('07-Sys-SLR-ld-rst: 7 bits system shift left right register with load and reset. Verilog implementation');
gettext('08-Sys-SLR-ld-rst');
gettext('08-Sys-SLR-ld-rst: 8 bits system shift left right register with load and reset. Verilog implementation');
gettext('09-Sys-SLR-ld-rst');
gettext('09-Sys-SLR-ld-rst: 9 bits system shift left right register with load and reset. Verilog implementation');
gettext('10-Sys-SLR-ld-rst');
gettext('10-Sys-SLR-ld-rst: 10 bits system shift left right register with load and reset. Verilog implementation');
gettext('11-Sys-SLR-ld-rst');
gettext('11-Sys-SLR-ld-rst: 11 bits system shift left right register with load and reset. Verilog implementation');
gettext('12-Sys-SLR-ld-rst');
gettext('12-Sys-SLR-ld-rst: 12 bits system shift left right register with load and reset. Verilog implementation');
gettext('13-Sys-SLR-ld-rst');
gettext('13-Sys-SLR-ld-rst: 13 bits system shift left right register with load and reset. Verilog implementation');
gettext('14-Sys-SLR-ld-rst');
gettext('14-Sys-SLR-ld-rst: 14 bits system shift left right register with load and reset. Verilog implementation');
gettext('15-Sys-SLR-ld-rst');
gettext('15-Sys-SLR-ld-rst: 15 bits system shift left right register with load and reset. Verilog implementation');
gettext('16-Sys-SLR-ld-rst');
gettext('16-Sys-SLR-ld-rst: 16 bits system shift left right register with load and reset. Verilog implementation');
gettext('17-Sys-SLR-ld-rst');
gettext('17-Sys-SLR-ld-rst: 17 bits system shift left right register with load and reset. Verilog implementation');
gettext('18-Sys-SLR-ld-rst');
gettext('18-Sys-SLR-ld-rst: 18 bits system shift left right register with load and reset. Verilog implementation');
gettext('19-Sys-SLR-ld-rst');
gettext('19-Sys-SLR-ld-rst: 19 bits system shift left right register with load and reset. Verilog implementation');
gettext('20-Sys-SLR-ld-rst');
gettext('20-Sys-SLR-ld-rst: 20 bits system shift left right register with load and reset. Verilog implementation');
gettext('21-Sys-SLR-ld-rst');
gettext('21-Sys-SLR-ld-rst: 21 bits system shift left right register with load and reset. Verilog implementation');
gettext('22-Sys-SLR-ld-rst');
gettext('22-Sys-SLR-ld-rst: 22 bits system shift left right register with load and reset. Verilog implementation');
gettext('23-Sys-SLR-ld-rst');
gettext('23-Sys-SLR-ld-rst: 23 bits system shift left right register with load and reset. Verilog implementation');
gettext('24-Sys-SLR-ld-rst');
gettext('24-Sys-SLR-ld-rst: 24 bits system shift left right register with load and reset. Verilog implementation');
gettext('25-Sys-SLR-ld-rst');
gettext('25-Sys-SLR-ld-rst: 25 bits system shift left right register with load and reset. Verilog implementation');
gettext('26-Sys-SLR-ld-rst');
gettext('26-Sys-SLR-ld-rst: 26 bits system shift left right register with load and reset. Verilog implementation');
gettext('27-Sys-SLR-ld-rst');
gettext('27-Sys-SLR-ld-rst: 27 bits system shift left right register with load and reset. Verilog implementation');
gettext('28-Sys-SLR-ld-rst');
gettext('28-Sys-SLR-ld-rst: 28 bits system shift left right register with load and reset. Verilog implementation');
gettext('29-Sys-SLR-ld-rst');
gettext('29-Sys-SLR-ld-rst: 29 bits system shift left right register with load and reset. Verilog implementation');
gettext('30-Sys-SLR-ld-rst');
gettext('30-Sys-SLR-ld-rst: 30 bits system shift left right register with load and reset. Verilog implementation');
gettext('31-Sys-SLR-ld-rst');
gettext('31-Sys-SLR-ld-rst: 31 bits system shift left right register with load and reset. Verilog implementation');
gettext('32-Sys-SLR-ld-rst');
gettext('32-Sys-SLR-ld-rst: 32 bits system shift left right register with load and reset. Verilog implementation');
gettext('02-Sys-SLR-ld-rst-imp1');
gettext('02-Sys-SLR-ld-rst-imp1: 2 bits system shift left right register with load and reset. Block implementation 1');
gettext('02-Sys-reg-rst: 2 bits system register with reset. Verilog implementation');
gettext('02-Sys-SLR-ld-rst-imp2');
gettext('02-Sys-SLR-ld-rst-imp2: 2 bits system shift left right register with load and reset. Block implementation 2');
gettext('Sys-DFF-rst: D Flip flop with reset input. When rst=1, the DFF is set to it initial value. Verilog implementation');
gettext('Data input');
gettext('System clock');
gettext('Initial default  \nvalue: 0');
gettext('Reset input');
gettext('02-Sys-SLR-ld-imp1');
gettext('02-Sys-SLR-ld-imp1: 2 bits system shift left right register with load input. Block implementation 1');
gettext('02-Sys-reg: 2 bits system register. Verilog implementation');
gettext('02-Sys-SLR-ld-imp2');
gettext('02-Sys-SLR-ld-imp2: 2 bits system shift left right register with load input. Block implementation 2');
gettext('System - D Flip-flop. Capture data every system clock cycle. Verilog implementation');
gettext('Parameter: Initial value');
gettext('Input data');
gettext('Output');
gettext('# D Flip-Flop  (system)\n\nIt stores the input data that arrives at cycle n  \nIts output is shown in the cycle n+1');
gettext('Not connected');
gettext('Blocks');
gettext('02-Sys-SLR-rst');
gettext('02-Sys-SLR-rst: 2 bits system shift left right register with reset. Verilog implementation');
gettext('03-Sys-SLR-rst');
gettext('03-Sys-SLR-rst: 3 bits system shift left right register with reset. Verilog implementation');
gettext('04-Sys-SLR-rst');
gettext('04-Sys-SLR-rst: 4 bits system shift left right register with reset. Verilog implementation');
gettext('05-Sys-SLR-rst');
gettext('05-Sys-SLR-rst: 5 bits system shift left right register with reset. Verilog implementation');
gettext('06-Sys-SLR-rst');
gettext('06-Sys-SLR-rst: 6 bits system shift left right register with reset. Verilog implementation');
gettext('07-Sys-SLR-rst');
gettext('07-Sys-SLR-rst: 7 bits system shift left right register with reset. Verilog implementation');
gettext('08-Sys-SLR-rst');
gettext('08-Sys-SLR-rst: 8 bits system shift left right register with reset. Verilog implementation');
gettext('09-Sys-SLR-rst');
gettext('09-Sys-SLR-rst: 9 bits system shift left right register with reset. Verilog implementation');
gettext('10-Sys-SLR-rst');
gettext('10-Sys-SLR-rst: 10 bits system shift left right register with reset. Verilog implementation');
gettext('11-Sys-SLR-rst');
gettext('11-Sys-SLR-rst: 11 bits system shift left right register with reset. Verilog implementation');
gettext('12-Sys-SLR-rst');
gettext('12-Sys-SLR-rst: 12 bits system shift left right register with reset. Verilog implementation');
gettext('13-Sys-SLR-rst');
gettext('13-Sys-SLR-rst: 13 bits system shift left right register with reset. Verilog implementation');
gettext('14-Sys-SLR-rst');
gettext('14-Sys-SLR-rst: 14 bits system shift left right register with reset. Verilog implementation');
gettext('15-Sys-SLR-rst');
gettext('15-Sys-SLR-rst: 15 bits system shift left right register with reset. Verilog implementation');
gettext('16-Sys-SLR-rst');
gettext('16-Sys-SLR-rst: 16 bits system shift left right register with reset. Verilog implementation');
gettext('17-Sys-SLR-rst');
gettext('17-Sys-SLR-rst: 17 bits system shift left right register with reset. Verilog implementation');
gettext('18-Sys-SLR-rst');
gettext('18-Sys-SLR-rst: 18 bits system shift left right register with reset. Verilog implementation');
gettext('19-Sys-SLR-rst');
gettext('19-Sys-SLR-rst: 19 bits system shift left right register with reset. Verilog implementation');
gettext('20-Sys-SLR-rst');
gettext('20-Sys-SLR-rst: 20 bits system shift left right register with reset. Verilog implementation');
gettext('21-Sys-SLR-rst');
gettext('21-Sys-SLR-rst: 21 bits system shift left right register with reset. Verilog implementation');
gettext('22-Sys-SLR-rst');
gettext('22-Sys-SLR-rst: 22 bits system shift left right register with reset. Verilog implementation');
gettext('23-Sys-SLR-rst');
gettext('23-Sys-SLR-rst: 23 bits system shift left right register with reset. Verilog implementation');
gettext('24-Sys-SLR-rst');
gettext('24-Sys-SLR-rst: 24 bits system shift left right register with reset. Verilog implementation');
gettext('25-Sys-SLR-rst');
gettext('25-Sys-SLR-rst: 25 bits system shift left right register with reset. Verilog implementation');
gettext('26-Sys-SLR-rst');
gettext('26-Sys-SLR-rst: 26 bits system shift left right register with reset. Verilog implementation');
gettext('27-Sys-SLR-rst');
gettext('27-Sys-SLR-rst: 27 bits system shift left right register with reset. Verilog implementation');
gettext('28-Sys-SLR-rst');
gettext('28-Sys-SLR-rst: 28 bits system shift left right register with reset. Verilog implementation');
gettext('29-Sys-SLR-rst');
gettext('29-Sys-SLR-rst: 29 bits system shift left right register with reset. Verilog implementation');
gettext('30-Sys-SLR-rst');
gettext('30-Sys-SLR-rst: 30 bits system shift left right register with reset. Verilog implementation');
gettext('31-Sys-SLR-rst');
gettext('31-Sys-SLR-rst: 31 bits system shift left right register with reset. Verilog implementation');
gettext('32-Sys-SLR-rst');
gettext('32-Sys-SLR-rst: 32 bits system shift left right register with reset. Verilog implementation');
gettext('02-Sys-SLR-imp1');
gettext('02-Sys-SLR-rst-imp1: 2 bits system shift left right register with reset. Block implementation 1');
gettext('02-Sys-SLR-imp2');
gettext('02-Sys-SLR-rst-imp2: 2 bits system shift left right register with reset. Block implementation 2');
gettext('02-Sys-SLR-imp1');
gettext('02-Sys-SLR-imp1: 2 bits system shift left right register. Block implementation 1');
gettext('02-Sys-SLR-imp2');
gettext('02-Sys-SLR-imp2: 2 bits system shift left right register. Block implementation 2');
gettext('Blocks');
gettext('02-SL');
gettext('02-SL: 2 bits shift left register. Verilog implementation');
gettext('03-SL');
gettext('03-SL: 3 bits shift left register. Verilog implementation');
gettext('04-SL');
gettext('04-SL: 4 bits shift left register. Verilog implementation');
gettext('05-SL');
gettext('05-SL: 5 bits shift left register. Verilog implementation');
gettext('06-SL');
gettext('06-SL: 6 bits shift left register. Verilog implementation');
gettext('07-SL');
gettext('07-SL: 7 bits shift left register. Verilog implementation');
gettext('08-SL');
gettext('08-SL: 8 bits shift left register. Verilog implementation');
gettext('09-SL');
gettext('09-SL: 9 bits shift left register. Verilog implementation');
gettext('10-SL');
gettext('10-SL: 10 bits shift left register. Verilog implementation');
gettext('11-SL');
gettext('11-SL: 11 bits shift left register. Verilog implementation');
gettext('12-SL');
gettext('12-SL: 12 bits shift left register. Verilog implementation');
gettext('13-SL');
gettext('13-SL: 13 bits shift left register. Verilog implementation');
gettext('14-SL');
gettext('14-SL: 14 bits shift left register. Verilog implementation');
gettext('15-SL');
gettext('15-SL: 15 bits shift left register. Verilog implementation');
gettext('16-SL');
gettext('16-SL: 16 bits shift left register. Verilog implementation');
gettext('17-SL');
gettext('17-SL: 17 bits shift left register. Verilog implementation');
gettext('18-SL');
gettext('18-SL: 18 bits shift left register. Verilog implementation');
gettext('19-SL');
gettext('19-SL: 19 bits shift left register. Verilog implementation');
gettext('20-SL');
gettext('20-SL: 20 bits shift left register. Verilog implementation');
gettext('21-SL');
gettext('21-SL: 21 bits shift left register. Verilog implementation');
gettext('22-SL');
gettext('22-SL: 22 bits shift left register. Verilog implementation');
gettext('23-SL');
gettext('23-SL: 23 bits shift left register. Verilog implementation');
gettext('24-SL');
gettext('24-SL: 24 bits shift left register. Verilog implementation');
gettext('25-SL');
gettext('25-SL: 25 bits shift left register. Verilog implementation');
gettext('26-SL');
gettext('26-SL: 26 bits shift left register. Verilog implementation');
gettext('27-SL');
gettext('27-SL: 27 bits shift left register. Verilog implementation');
gettext('28-SL');
gettext('28-SL: 28 bits shift left register. Verilog implementation');
gettext('29-SL');
gettext('29-SL: 29 bits shift left register. Verilog implementation');
gettext('30-SL');
gettext('30-SL: 30 bits shift left register. Verilog implementation');
gettext('31-SL');
gettext('31-SL: 31 bits shift left register. Verilog implementation');
gettext('32-SL');
gettext('32-SL: 32 bits shift left register. Verilog implementation');
gettext('Blocks');
gettext('02-SL-ld');
gettext('02-SL-ld: 2 bits shift left register with load. Verilog implementation');
gettext('03-SL-ld');
gettext('03-SL-ld: 3 bits shift left register with load. Verilog implementation');
gettext('04-SL-ld');
gettext('04-SL-ld: 4 bits shift left register with load. Verilog implementation');
gettext('05-SL-ld');
gettext('05-SL-ld: 5 bits shift left register with load. Verilog implementation');
gettext('06-SL-ld');
gettext('06-SL-ld: 6 bits shift left register with load. Verilog implementation');
gettext('07-SL-ld');
gettext('07-SL-ld: 7 bits shift left register with load. Verilog implementation');
gettext('08-SL-ld');
gettext('08-SL-ld: 8 bits shift left register with load. Verilog implementation');
gettext('09-SL-ld');
gettext('09-SL-ld: 9 bits shift left register with load. Verilog implementation');
gettext('10-SL-ld');
gettext('10-SL-ld: 10 bits shift left register with load. Verilog implementation');
gettext('11-SL-ld');
gettext('11-SL-ld: 11 bits shift left register with load. Verilog implementation');
gettext('12-SL-ld');
gettext('12-SL-ld: 12 bits shift left register with load. Verilog implementation');
gettext('13-SL-ld');
gettext('13-SL-ld: 13 bits shift left register with load. Verilog implementation');
gettext('14-SL-ld');
gettext('14-SL-ld: 14 bits shift left register with load. Verilog implementation');
gettext('15-SL-ld');
gettext('15-SL-ld: 15 bits shift left register with load. Verilog implementation');
gettext('16-SL-ld');
gettext('16-SL-ld: 16 bits shift left register with load. Verilog implementation');
gettext('17-SL-ld');
gettext('17-SL-ld: 17 bits shift left register with load. Verilog implementation');
gettext('18-SL-ld');
gettext('18-SL-ld: 18 bits shift left register with load. Verilog implementation');
gettext('19-SL-ld');
gettext('19-SL-ld: 19 bits shift left register with load. Verilog implementation');
gettext('20-SL-ld');
gettext('20-SL-ld: 20 bits shift left register with load. Verilog implementation');
gettext('21-SL-ld');
gettext('21-SL-ld: 21 bits shift left register with load. Verilog implementation');
gettext('22-SL-ld');
gettext('22-SL-ld: 22 bits shift left register with load. Verilog implementation');
gettext('23-SL-ld');
gettext('23-SL-ld: 23 bits shift left register with load. Verilog implementation');
gettext('24-SL-ld');
gettext('24-SL-ld: 24 bits shift left register with load. Verilog implementation');
gettext('25-SL-ld');
gettext('25-SL-ld: 25 bits shift left register with load. Verilog implementation');
gettext('26-SL-ld');
gettext('26-SL-ld: 26 bits shift left register with load. Verilog implementation');
gettext('27-SL-ld');
gettext('27-SL-ld: 27 bits shift left register with load. Verilog implementation');
gettext('28-SL-ld');
gettext('28-SL-ld: 28 bits shift left register with load. Verilog implementation');
gettext('29-SL-ld');
gettext('29-SL-ld: 29 bits shift left register with load. Verilog implementation');
gettext('30-SL-ld');
gettext('30-SL-ld: 30 bits shift left register with load. Verilog implementation');
gettext('31-SL-ld');
gettext('31-SL-ld: 31 bits shift left register with load. Verilog implementation');
gettext('32-SL-ld');
gettext('32-SL-ld: 32 bits shift left register with load. Verilog implementation');
gettext('Blocks');
gettext('02-SL-ld-rst');
gettext('02-SL-ld-rst: 2 bits shift left register with load and reset. Verilog implementation');
gettext('03-SL-ld-rst');
gettext('03-SL-ld-rst: 3 bits shift left register with load and reset. Verilog implementation');
gettext('04-SL-ld-rst');
gettext('04-SL-ld-rst: 4 bits shift left register with load and reset. Verilog implementation');
gettext('05-SL-ld-rst');
gettext('05-SL-ld-rst: 5 bits shift left register with load and reset. Verilog implementation');
gettext('06-SL-ld-rst');
gettext('06-SL-ld-rst: 6 bits shift left register with load and reset. Verilog implementation');
gettext('07-SL-ld-rst');
gettext('07-SL-ld-rst: 7 bits shift left register with load and reset. Verilog implementation');
gettext('08-SL-ld-rst');
gettext('08-SL-ld-rst: 8 bits shift left register with load and reset. Verilog implementation');
gettext('09-SL-ld-rst');
gettext('09-SL-ld-rst: 9 bits shift left register with load and reset. Verilog implementation');
gettext('10-SL-ld-rst');
gettext('10-SL-ld-rst: 10 bits shift left register with load and reset. Verilog implementation');
gettext('11-SL-ld-rst');
gettext('11-SL-ld-rst: 11 bits shift left register with load and reset. Verilog implementation');
gettext('12-SL-ld-rst');
gettext('12-SL-ld-rst: 12 bits shift left register with load and reset. Verilog implementation');
gettext('13-SL-ld-rst');
gettext('13-SL-ld-rst: 13 bits shift left register with load and reset. Verilog implementation');
gettext('14-SL-ld-rst');
gettext('14-SL-ld-rst: 14 bits shift left register with load and reset. Verilog implementation');
gettext('15-SL-ld-rst');
gettext('15-SL-ld-rst: 15 bits shift left register with load and reset. Verilog implementation');
gettext('16-SL-ld-rst');
gettext('16-SL-ld-rst: 16 bits shift left register with load and reset. Verilog implementation');
gettext('17-SL-ld-rst');
gettext('17-SL-ld-rst: 17 bits shift left register with load and reset. Verilog implementation');
gettext('18-SL-ld-rst');
gettext('18-SL-ld-rst: 18 bits shift left register with load and reset. Verilog implementation');
gettext('19-SL-ld-rst');
gettext('19-SL-ld-rst: 19 bits shift left register with load and reset. Verilog implementation');
gettext('20-SL-ld-rst');
gettext('20-SL-ld-rst: 20 bits shift left register with load and reset. Verilog implementation');
gettext('21-SL-ld-rst');
gettext('21-SL-ld-rst: 21 bits shift left register with load and reset. Verilog implementation');
gettext('22-SL-ld-rst');
gettext('22-SL-ld-rst: 22 bits shift left register with load and reset. Verilog implementation');
gettext('23-SL-ld-rst');
gettext('23-SL-ld-rst: 23 bits shift left register with load and reset. Verilog implementation');
gettext('24-SL-ld-rst');
gettext('24-SL-ld-rst: 24 bits shift left register with load and reset. Verilog implementation');
gettext('25-SL-ld-rst');
gettext('25-SL-ld-rst: 25 bits shift left register with load and reset. Verilog implementation');
gettext('26-SL-ld-rst');
gettext('26-SL-ld-rst: 26 bits shift left register with load and reset. Verilog implementation');
gettext('27-SL-ld-rst');
gettext('27-SL-ld-rst: 27 bits shift left register with load and reset. Verilog implementation');
gettext('28-SL-ld-rst');
gettext('28-SL-ld-rst: 28 bits shift left register with load and reset. Verilog implementation');
gettext('29-SL-ld-rst');
gettext('29-SL-ld-rst: 29 bits shift left register with load and reset. Verilog implementation');
gettext('30-SL-ld-rst');
gettext('30-SL-ld-rst: 30 bits shift left register with load and reset. Verilog implementation');
gettext('31-SL-ld-rst');
gettext('31-SL-ld-rst: 31 bits shift left register with load and reset. Verilog implementation');
gettext('32-SL-ld-rst');
gettext('32-SL-ld-rst: 32 bits shift left register with load and reset. Verilog implementation');
gettext('02-SL-ld-imp1');
gettext('02-SL-ld-rst-imp1: 2 bits shift left register with load and reset. Block implementation 1');
gettext('Combinational  \nShift-right');
gettext('02-SL-ld-imp2');
gettext('02-SL-ld-rst-imp2: 2 bits shift left register with load and reset. Block implementation 2');
gettext('02-SL-ld-imp1');
gettext('02-SL-ld-imp1: 2 bits shift left register with load and reset. Block implementation 1');
gettext('02-SL-ld-imp2');
gettext('02-SL-ld-imp2: 2 bits shift left register with load and reset. Block implementation 2');
gettext('Blocks');
gettext('02-SL-rst');
gettext('02-SL-rst: 2 bits shift left register with reset. Verilog implementation');
gettext('03-SL-rst');
gettext('03-SL-rst: 3 bits shift left register with reset. Verilog implementation');
gettext('04-SL-rst');
gettext('04-SL-rst: 4 bits shift left register with reset. Verilog implementation');
gettext('05-SL-rst');
gettext('05-SL-rst: 5 bits shift left register with reset. Verilog implementation');
gettext('06-SL-rst');
gettext('06-SL-rst: 6 bits shift left register with reset. Verilog implementation');
gettext('07-SL-rst');
gettext('07-SL-rst: 7 bits shift left register with reset. Verilog implementation');
gettext('08-SL-rst');
gettext('08-SL-rst: 8 bits shift left register with reset. Verilog implementation');
gettext('09-SL-rst');
gettext('09-SL-rst: 9 bits shift left register with reset. Verilog implementation');
gettext('10-SL-rst');
gettext('10-SL-rst: 10 bits shift left register with reset. Verilog implementation');
gettext('11-SL-rst');
gettext('11-SL-rst: 11 bits shift left register with reset. Verilog implementation');
gettext('12-SL-rst');
gettext('12-SL-rst: 12 bits shift left register with reset. Verilog implementation');
gettext('13-SL-rst');
gettext('13-SL-rst: 13 bits shift left register with reset. Verilog implementation');
gettext('14-SL-rst');
gettext('14-SL-rst: 14 bits shift left register with reset. Verilog implementation');
gettext('15-SL-rst');
gettext('15-SL-rst: 15 bits shift left register with reset. Verilog implementation');
gettext('16-SL-rst');
gettext('16-SL-rst: 16 bits shift left register with reset. Verilog implementation');
gettext('17-SL-rst');
gettext('17-SL-rst: 17 bits shift left register with reset. Verilog implementation');
gettext('18-SL-rst');
gettext('18-SL-rst: 18 bits shift left register with reset. Verilog implementation');
gettext('19-SL-rst');
gettext('19-SL-rst: 19 bits shift left register with reset. Verilog implementation');
gettext('20-SL-rst');
gettext('20-SL-rst: 20 bits shift left register with reset. Verilog implementation');
gettext('21-SL-rst');
gettext('21-SL-rst: 21 bits shift left register with reset. Verilog implementation');
gettext('22-SL-rst');
gettext('22-SL-rst: 22 bits shift left register with reset. Verilog implementation');
gettext('23-SL-rst');
gettext('23-SL-rst: 23 bits shift left register with reset. Verilog implementation');
gettext('24-SL-rst');
gettext('24-SL-rst: 24 bits shift left register with reset. Verilog implementation');
gettext('25-SL-rst');
gettext('25-SL-rst: 25 bits shift left register with reset. Verilog implementation');
gettext('26-SL-rst');
gettext('26-SL-rst: 26 bits shift left register with reset. Verilog implementation');
gettext('27-SL-rst');
gettext('27-SL-rst: 27 bits shift left register with reset. Verilog implementation');
gettext('28-SL-rst');
gettext('28-SL-rst: 28 bits shift left register with reset. Verilog implementation');
gettext('29-SL-rst');
gettext('29-SL-rst: 29 bits shift left register with reset. Verilog implementation');
gettext('30-SL-rst');
gettext('30-SL-rst: 30 bits shift left register with reset. Verilog implementation');
gettext('31-SL-rst');
gettext('31-SL-rst: 31 bits shift left register with reset. Verilog implementation');
gettext('32-SL-rst');
gettext('32-SL-rst: 32 bits shift left register with reset. Verilog implementation');
gettext('02-SL-rst-imp1');
gettext('02-SL-rst-imp1: 2 bits shift left register with reset. Block implementation 1');
gettext('02-SL-rst-imp2');
gettext('02-SL-rst-imp2: 2 bits shift left register with reset. Block implementation 2');
gettext('04-SL-rst-imp1');
gettext('04-SL-rst-imp1: 4 bits shift left register with reset. Block implementation 1');
gettext('04-Reg-rst: 4 bits Register with reset. Verilog implementation');
gettext('SL1-4-verilog: Shift  a 4-bit value one bit left. LSB is filled with 'in' and the MSB is written to out . Verilog implementation');
gettext('04-SL-rst-imp2');
gettext('04-SL-rst-imp2: 4 bits shift left register with reset. Block implementation 2');
gettext('Bus4-Join-all: Join all the wires into a 4-bits Bus');
gettext('02-SL-imp1');
gettext('02-SL-imp1: 2 bits shift left register. Block implementation 1');
gettext('02-SL-imp2');
gettext('02-SL-imp2: 2 bits shift left register. Block implementation 2');
gettext('04-SL-imp1');
gettext('04-SL-imp1: 2 bits shift left register. Block implementation 1');
gettext('04-Reg: 4 bits Register. Verilog implementation');
gettext('04-SL-imp2');
gettext('04-SL-imp2: 4 bits shift left register. Block implementation 2');
gettext('Blocks');
gettext('02-Sys-SL');
gettext('02-Sys-SL: 2 bits system shift left register. Verilog implementation');
gettext('03-Sys-SL');
gettext('03-Sys-SL: 3 bits system shift left register. Verilog implementation');
gettext('04-Sys-SL');
gettext('04-Sys-SL: 4 bits system shift left register. Verilog implementation');
gettext('05-Sys-SL');
gettext('05-Sys-SL: 5 bits system shift left register. Verilog implementation');
gettext('06-Sys-SL');
gettext('06-Sys-SL: 6 bits system shift left register. Verilog implementation');
gettext('07-Sys-SL');
gettext('07-Sys-SL: 7 bits system shift left register. Verilog implementation');
gettext('08-Sys-SL');
gettext('08-Sys-SL: 8 bits system shift left register. Verilog implementation');
gettext('09-Sys-SL');
gettext('09-Sys-SL: 9 bits system shift left register. Verilog implementation');
gettext('10-Sys-SL');
gettext('10-Sys-SL: 10 bits system shift left register. Verilog implementation');
gettext('11-Sys-SL');
gettext('11-Sys-SL: 11 bits system shift left register. Verilog implementation');
gettext('12-Sys-SL');
gettext('12-Sys-SL: 12 bits system shift left register. Verilog implementation');
gettext('13-Sys-SL');
gettext('13-Sys-SL: 13 bits system shift left register. Verilog implementation');
gettext('14-Sys-SL');
gettext('14-Sys-SL: 14 bits system shift left register. Verilog implementation');
gettext('15-Sys-SL');
gettext('15-Sys-SL: 15 bits system shift left register. Verilog implementation');
gettext('16-Sys-SL');
gettext('16-Sys-SL: 16 bits system shift left register. Verilog implementation');
gettext('17-Sys-SL');
gettext('17-Sys-SL: 17 bits system shift left register. Verilog implementation');
gettext('18-Sys-SL');
gettext('18-Sys-SL: 18 bits system shift left register. Verilog implementation');
gettext('19-Sys-SL');
gettext('19-Sys-SL: 19 bits system shift left register. Verilog implementation');
gettext('20-Sys-SL');
gettext('20-Sys-SL: 20 bits system shift left register. Verilog implementation');
gettext('21-Sys-SL');
gettext('21-Sys-SL: 21 bits system shift left register. Verilog implementation');
gettext('22-Sys-SL');
gettext('22-Sys-SL: 22 bits system shift left register. Verilog implementation');
gettext('23-Sys-SL');
gettext('23-Sys-SL: 23 bits system shift left register. Verilog implementation');
gettext('24-Sys-SL');
gettext('24-Sys-SL: 24 bits system shift left register. Verilog implementation');
gettext('25-Sys-SL');
gettext('25-Sys-SL: 25 bits system shift left register. Verilog implementation');
gettext('26-Sys-SL');
gettext('26-Sys-SL: 26 bits system shift left register. Verilog implementation');
gettext('27-Sys-SL');
gettext('27-Sys-SL: 27 bits system shift left register. Verilog implementation');
gettext('28-Sys-SL');
gettext('28-Sys-SL: 28 bits system shift left register. Verilog implementation');
gettext('29-Sys-SL');
gettext('29-Sys-SL: 29 bits system shift left register. Verilog implementation');
gettext('30-Sys-SL');
gettext('30-Sys-SL: 30 bits system shift left register. Verilog implementation');
gettext('31-Sys-SL');
gettext('31-Sys-SL: 31 bits system shift left register. Verilog implementation');
gettext('32-Sys-SL');
gettext('32-Sys-SL: 32 bits system shift left register. Verilog implementation');
gettext('Blocks');
gettext('02-Sys-SL-ld');
gettext('02-Sys-SL-ld: 2 bits system shift left register, with load. Verilog implementation');
gettext('Load external data');
gettext('External data');
gettext('Serial input');
gettext('03-Sys-SL-ld');
gettext('03-Sys-SL-ld: 3 bits system shift left register, with load. Verilog implementation');
gettext('04-Sys-SL-ld');
gettext('04-Sys-SL-ld: 4 bits system shift left register, with load. Verilog implementation');
gettext('05-Sys-SL-ld');
gettext('05-Sys-SL-ld: 5 bits system shift left register, with load. Verilog implementation');
gettext('06-Sys-SL-ld');
gettext('06-Sys-SL-ld: 6 bits system shift left register, with load. Verilog implementation');
gettext('07-Sys-SL-ld');
gettext('07-Sys-SL-ld: 7 bits system shift left register, with load. Verilog implementation');
gettext('08-Sys-SL-ld');
gettext('08-Sys-SL-ld: 8 bits system shift left register, with load. Verilog implementation');
gettext('09-Sys-SL-ld');
gettext('09-Sys-SL-ld: 9 bits system shift left register, with load. Verilog implementation');
gettext('10-Sys-SL-ld');
gettext('10-Sys-SL-ld: 10 bits system shift left register, with load. Verilog implementation');
gettext('11-Sys-SL-ld');
gettext('11-Sys-SL-ld: 11 bits system shift left register, with load. Verilog implementation');
gettext('12-Sys-SL-ld');
gettext('12-Sys-SL-ld: 12 bits system shift left register, with load. Verilog implementation');
gettext('13-Sys-SL-ld');
gettext('13-Sys-SL-ld: 13 bits system shift left register, with load. Verilog implementation');
gettext('14-Sys-SL-ld');
gettext('14-Sys-SL-ld: 14 bits system shift left register, with load. Verilog implementation');
gettext('15-Sys-SL-ld');
gettext('15-Sys-SL-ld: 15 bits system shift left register, with load. Verilog implementation');
gettext('16-Sys-SL-ld');
gettext('16-Sys-SL-ld: 16 bits system shift left register, with load. Verilog implementation');
gettext('17-Sys-SL-ld');
gettext('17-Sys-SL-ld: 17 bits system shift left register, with load. Verilog implementation');
gettext('18-Sys-SL-ld');
gettext('18-Sys-SL-ld: 18 bits system shift left register, with load. Verilog implementation');
gettext('19-Sys-SL-ld');
gettext('19-Sys-SL-ld: 19 bits system shift left register, with load. Verilog implementation');
gettext('20-Sys-SL-ld');
gettext('20-Sys-SL-ld: 20 bits system shift left register, with load. Verilog implementation');
gettext('21-Sys-SL-ld');
gettext('21-Sys-SL-ld: 21 bits system shift left register, with load. Verilog implementation');
gettext('22-Sys-SL-ld');
gettext('22-Sys-SL-ld: 22 bits system shift left register, with load. Verilog implementation');
gettext('23-Sys-SL-ld');
gettext('23-Sys-SL-ld: 23 bits system shift left register, with load. Verilog implementation');
gettext('24-Sys-SL-ld');
gettext('24-Sys-SL-ld: 24 bits system shift left register, with load. Verilog implementation');
gettext('25-Sys-SL-ld');
gettext('25-Sys-SL-ld: 25 bits system shift left register, with load. Verilog implementation');
gettext('26-Sys-SL-ld');
gettext('26-Sys-SL-ld: 26 bits system shift left register, with load. Verilog implementation');
gettext('27-Sys-SL-ld');
gettext('27-Sys-SL-ld: 27 bits system shift left register, with load. Verilog implementation');
gettext('28-Sys-SL-ld');
gettext('28-Sys-SL-ld: 28 bits system shift left register, with load. Verilog implementation');
gettext('29-Sys-SL-ld');
gettext('29-Sys-SL-ld: 29 bits system shift left register, with load. Verilog implementation');
gettext('30-Sys-SL-ld');
gettext('30-Sys-SL-ld: 30 bits system shift left register, with load. Verilog implementation');
gettext('31-Sys-SL-ld');
gettext('31-Sys-SL-ld: 31 bits system shift left register, with load. Verilog implementation');
gettext('32-Sys-SL-ld');
gettext('32-Sys-SL-ld: 32 bits system shift left register, with load. Verilog implementation');
gettext('Blocks');
gettext('02-Sys-SL-ld-rst');
gettext('02-Sys-SL-ld-rst: 2 bits system shift left register, with load and reset. Verilog implementation');
gettext('03-Sys-SL-ld-rst');
gettext('03-Sys-SL-ld-rst: 3 bits system shift left register, with load and reset. Verilog implementation');
gettext('04-Sys-SL-ld-rst');
gettext('04-Sys-SL-ld-rst: 4 bits system shift left register, with load and reset. Verilog implementation');
gettext('05-Sys-SL-ld-rst');
gettext('05-Sys-SL-ld-rst: 5 bits system shift left register, with load and reset. Verilog implementation');
gettext('06-Sys-SL-ld-rst');
gettext('06-Sys-SL-ld-rst: 6 bits system shift left register, with load and reset. Verilog implementation');
gettext('07-Sys-SL-ld-rst');
gettext('07-Sys-SL-ld-rst: 7 bits system shift left register, with load and reset. Verilog implementation');
gettext('08-Sys-SL-ld-rst');
gettext('08-Sys-SL-ld-rst: 8 bits system shift left register, with load and reset. Verilog implementation');
gettext('09-Sys-SL-ld-rst');
gettext('09-Sys-SL-ld-rst: 9 bits system shift left register, with load and reset. Verilog implementation');
gettext('10-Sys-SL-ld-rst');
gettext('10-Sys-SL-ld-rst: 10 bits system shift left register, with load and reset. Verilog implementation');
gettext('11-Sys-SL-ld-rst');
gettext('11-Sys-SL-ld-rst: 11 bits system shift left register, with load and reset. Verilog implementation');
gettext('12-Sys-SL-ld-rst');
gettext('12-Sys-SL-ld-rst: 12 bits system shift left register, with load and reset. Verilog implementation');
gettext('13-Sys-SL-ld-rst');
gettext('13-Sys-SL-ld-rst: 13 bits system shift left register, with load and reset. Verilog implementation');
gettext('14-Sys-SL-ld-rst');
gettext('14-Sys-SL-ld-rst: 14 bits system shift left register, with load and reset. Verilog implementation');
gettext('15-Sys-SL-ld-rst');
gettext('15-Sys-SL-ld-rst: 15 bits system shift left register, with load and reset. Verilog implementation');
gettext('16-Sys-SL-ld-rst');
gettext('16-Sys-SL-ld-rst: 16 bits system shift left register, with load and reset. Verilog implementation');
gettext('17-Sys-SL-ld-rst');
gettext('17-Sys-SL-ld-rst: 17 bits system shift left register, with load and reset. Verilog implementation');
gettext('18-Sys-SL-ld-rst');
gettext('18-Sys-SL-ld-rst: 18 bits system shift left register, with load and reset. Verilog implementation');
gettext('19-Sys-SL-ld-rst');
gettext('19-Sys-SL-ld-rst: 19 bits system shift left register, with load and reset. Verilog implementation');
gettext('20-Sys-SL-ld-rst');
gettext('20-Sys-SL-ld-rst: 20 bits system shift left register, with load and reset. Verilog implementation');
gettext('21-Sys-SL-ld-rst');
gettext('21-Sys-SL-ld-rst: 21 bits system shift left register, with load and reset. Verilog implementation');
gettext('22-Sys-SL-ld-rst');
gettext('22-Sys-SL-ld-rst: 22 bits system shift left register, with load and reset. Verilog implementation');
gettext('23-Sys-SL-ld-rst');
gettext('23-Sys-SL-ld-rst: 23 bits system shift left register, with load and reset. Verilog implementation');
gettext('24-Sys-SL-ld-rst');
gettext('24-Sys-SL-ld-rst: 24 bits system shift left register, with load and reset. Verilog implementation');
gettext('25-Sys-SL-ld-rst');
gettext('25-Sys-SL-ld-rst: 25 bits system shift left register, with load and reset. Verilog implementation');
gettext('26-Sys-SL-ld-rst');
gettext('26-Sys-SL-ld-rst: 26 bits system shift left register, with load and reset. Verilog implementation');
gettext('27-Sys-SL-ld-rst');
gettext('27-Sys-SL-ld-rst: 27 bits system shift left register, with load and reset. Verilog implementation');
gettext('28-Sys-SL-ld-rst');
gettext('28-Sys-SL-ld-rst: 28 bits system shift left register, with load and reset. Verilog implementation');
gettext('29-Sys-SL-ld-rst');
gettext('29-Sys-SL-ld-rst: 29 bits system shift left register, with load and reset. Verilog implementation');
gettext('30-Sys-SL-ld-rst');
gettext('30-Sys-SL-ld-rst: 30 bits system shift left register, with load and reset. Verilog implementation');
gettext('31-Sys-SL-ld-rst');
gettext('31-Sys-SL-ld-rst: 31 bits system shift left register, with load and reset. Verilog implementation');
gettext('32-Sys-SL-ld-rst');
gettext('32-Sys-SL-ld-rst: 32 bits system shift left register, with load and reset. Verilog implementation');
gettext('02-Sys-SL-ld-rst-imp1');
gettext('02-Sys-SL-ld-rst-imp1: 2-bits System Shift register to the left, with load and reset. Block implementation 1');
gettext('Combinational  \nShift-left');
gettext('Sys-reg-rst');
gettext('Data to load from the  \noutside');
gettext('Shifted internal data');
gettext('Mux-2-1');
gettext('Selects which data to load  \ninto the register:  \n* load=0: Shifted data\n* load=1: External data');
gettext('02-Sys-SL-ld-rst-imp2');
gettext('02-Sys-SL-ld-rst-imp2: 2-bits System Shift register to the left, with load and reset. Block implementation 2');
gettext('Sys-DFF-ld-rst-verilog. System - D Flip-flop. Capture data every system clock cycle. from input si. If load is active, the data is captured from the d input. Reset input. Verilog implementation');
gettext('Input data (serial)');
gettext('# D Flip-Flop  (system) with load and reset\n\nIt stores the input data that arrives at cycle n  \nIts output is shown in the cycle n+1  \nThe data is captured from input si. If load is active the  \ndata is captured from input d  \nReset input');
gettext('Input data (Paralell)');
gettext('Load control');
gettext('04-Sys-SL-ld-rst-imp1');
gettext('04-Sys-SL-ld-rst-imp1: 4-bits System Shift register to the left, with load and reset. Block implementation 1');
gettext('2-to-1 Multplexer (4-bit channels). Verilog implementation');
gettext('04-Sys-reg-rst: 4 bits system register with reset. Verilog implementation');
gettext('04-Sys-SL-ld-rst-imp2');
gettext('04-Sys-SL-ld-rst-imp2: 4-bits System Shift register to the left, with load and reset. Block implementation 2');
gettext('Bus4-Split-all: Split the 4-bits bus into its wires');
gettext('08-Sys-SL-ld-rst-imp1');
gettext('08-Sys-SL-ld-rst-imp1: 8-bits System Shift register to the left, with load and reset. Block implementation 1');
gettext('2-to-1 Multplexer (8-bit channels). Verilog implementation');
gettext('SL1-8-verilog: Shift  a 8-bit value one bit left. LSB is filled with 'in' and the MSB is written to out . Verilog implementation');
gettext('08-Sys-reg-rst: 8 bits system register with reset. Verilog implementation');
gettext('16-Sys-SL-ld-rst-imp1');
gettext('16-Sys-SL-ld-rst-imp1: 16-bits System Shift register to the left, with load and reset. Block implementation 1');
gettext('2-to-1 Multplexer (16-bit channels). Verilog implementation');
gettext('SL1-16-verilog: Shift  a 16-bit value one bit left. LSB is filled with 'in' and the MSB is written to out . Verilog implementation');
gettext('16-Sys-reg-rst: 16 bits system register with reset. Verilog implementation');
gettext('32-Sys-SL-ld-rst-imp1');
gettext('32-Sys-SL-ld-rst-imp1: 32-bits System Shift register to the left, with load and reset. Block implementation 1');
gettext('2-to-1 Multplexer (32-bit channels). Verilog implementation');
gettext('SL1-32-verilog: Shift  a 32-bit value one bit left. LSB is filled with 'in' and the MSB is written to out . Verilog implementation');
gettext('32-Sys-reg-rst: 32 bits system register with reset. Verilog implementation');
gettext('02-Sys-SL-ld-imp1');
gettext('02-Sys-SL-ld-imp1: 2-bits System Shift register to the left, with load. Block implementation 1');
gettext('02-Sys-SL-ld-imp2');
gettext('02-Sys-SL-ld-imp2: 2-bits System Shift register to the left, with load. Block implementation 2');
gettext('Sys-DFF-ld-verilog. System - D Flip-flop. Capture data every system clock cycle. from input si. If load is active, the data is captured from the d input. Verilog implementation');
gettext('# D Flip-Flop  (system) with load\n\nIt stores the input data that arrives at cycle n  \nIts output is shown in the cycle n+1  \nThe data is captured from input si. If load is active the  \ndata is captured from input d');
gettext('04-Sys-SL-ld-imp1');
gettext('04-Sys-SL-ld-imp1: 4-bits System Shift register to the left, with load. Block implementation 1');
gettext('04-Sys-reg: 4 bits system register. Verilog implementation');
gettext('04-Sys-SL-ld-imp2');
gettext('04-Sys-SL-ld-imp2: 4-bits System Shift register to the left, with load. Block implementation 2');
gettext('08-Sys-SL-ld-imp1');
gettext('08-Sys-SL-ld-imp1: 8-bits System Shift register to the left, with load. Block implementation 1');
gettext('08-Sys-reg: 8 bits system register. Verilog implementation');
gettext('16-Sys-SL-ld-imp1');
gettext('16-Sys-SL-ld-imp1: 16-bits System Shift register to the left, with load. Block implementation 1');
gettext('16-Sys-reg: 16 bits system register. Verilog implementation');
gettext('32-Sys-SL-ld-imp1');
gettext('32-Sys-SL-ld-imp1: 32-bits System Shift register to the left, with load. Block implementation 1');
gettext('32-Sys-reg: 32 bits system register. Verilog implementation');
gettext('Blocks');
gettext('02-Sys-SL-rst');
gettext('02-Sys-SL-rst: 2 bits system shift left register, with reset. Verilog implementation');
gettext('03-Sys-SL-rst');
gettext('03-Sys-SL-rst: 3 bits system shift left register, with reset. Verilog implementation');
gettext('04-Sys-SL-rst');
gettext('04-Sys-SL-rst: 4 bits system shift left register, with reset. Verilog implementation');
gettext('05-Sys-SL-rst');
gettext('05-Sys-SL-rst: 5 bits system shift left register, with reset. Verilog implementation');
gettext('06-Sys-SL-rst');
gettext('06-Sys-SL-rst: 6 bits system shift left register, with reset. Verilog implementation');
gettext('07-Sys-SL-rst');
gettext('07-Sys-SL-rst: 7 bits system shift left register, with reset. Verilog implementation');
gettext('08-Sys-SL-rst');
gettext('08-Sys-SL-rst: 8 bits system shift left register, with reset. Verilog implementation');
gettext('09-Sys-SL-rst');
gettext('09-Sys-SL-rst: 9 bits system shift left register, with reset. Verilog implementation');
gettext('10-Sys-SL-rst');
gettext('10-Sys-SL-rst: 10 bits system shift left register, with reset. Verilog implementation');
gettext('11-Sys-SL-rst');
gettext('11-Sys-SL-rst: 11 bits system shift left register, with reset. Verilog implementation');
gettext('12-Sys-SL-rst');
gettext('12-Sys-SL-rst: 12 bits system shift left register, with reset. Verilog implementation');
gettext('13-Sys-SL-rst');
gettext('13-Sys-SL-rst: 13 bits system shift left register, with reset. Verilog implementation');
gettext('14-Sys-SL-rst');
gettext('14-Sys-SL-rst: 14 bits system shift left register, with reset. Verilog implementation');
gettext('15-Sys-SL-rst');
gettext('15-Sys-SL-rst: 15 bits system shift left register, with reset. Verilog implementation');
gettext('16-Sys-SL-rst');
gettext('16-Sys-SL-rst: 16 bits system shift left register, with reset. Verilog implementation');
gettext('17-Sys-SL-rst');
gettext('17-Sys-SL-rst: 17 bits system shift left register, with reset. Verilog implementation');
gettext('18-Sys-SL-rst');
gettext('18-Sys-SL-rst: 18 bits system shift left register, with reset. Verilog implementation');
gettext('19-Sys-SL-rst');
gettext('19-Sys-SL-rst: 19 bits system shift left register, with reset. Verilog implementation');
gettext('20-Sys-SL-rst');
gettext('20-Sys-SL-rst: 20 bits system shift left register, with reset. Verilog implementation');
gettext('21-Sys-SL-rst');
gettext('21-Sys-SL-rst: 21 bits system shift left register, with reset. Verilog implementation');
gettext('22-Sys-SL-rst');
gettext('22-Sys-SL-rst: 22 bits system shift left register, with reset. Verilog implementation');
gettext('23-Sys-SL-rst');
gettext('23-Sys-SL-rst: 23 bits system shift left register, with reset. Verilog implementation');
gettext('24-Sys-SL-rst');
gettext('24-Sys-SL-rst: 24 bits system shift left register, with reset. Verilog implementation');
gettext('25-Sys-SL-rst');
gettext('25-Sys-SL-rst: 25 bits system shift left register, with reset. Verilog implementation');
gettext('26-Sys-SL-rst');
gettext('26-Sys-SL-rst: 26 bits system shift left register, with reset. Verilog implementation');
gettext('27-Sys-SL-rst');
gettext('27-Sys-SL-rst: 27 bits system shift left register, with reset. Verilog implementation');
gettext('28-Sys-SL-rst');
gettext('28-Sys-SL-rst: 28 bits system shift left register, with reset. Verilog implementation');
gettext('29-Sys-SL-rst');
gettext('29-Sys-SL-rst: 29 bits system shift left register, with reset. Verilog implementation');
gettext('30-Sys-SL-rst');
gettext('30-Sys-SL-rst: 30 bits system shift left register, with reset. Verilog implementation');
gettext('31-Sys-SL-rst');
gettext('31-Sys-SL-rst: 31 bits system shift left register, with reset. Verilog implementation');
gettext('32-Sys-SL-rst');
gettext('32-Sys-SL-rst: 32 bits system shift left register, with reset. Verilog implementation');
gettext('02-Sys-SL-rst-imp1');
gettext('02-Sys-SL-rst-imp1: 2-bits System Shift register to the left, with reset.  Block implementation 1');
gettext('02-Sys-SL-rst-imp2');
gettext('02-Sys-SL-rst-imp2: 2-bits System Shift register to the left, with reset.  Block implementation 2');
gettext('04-Sys-SL-rst-imp1');
gettext('Sys-SL-rst-04-imp1: 4-bits System Shift register to the left, with reset.  Block implementation 1');
gettext('04-Sys-SL-rst-imp2');
gettext('Sys-SL-rst-04-imp2: 4-bits System Shift register to the left, with reset.  Block implementation 2');
gettext('08-Sys-SL-rst-imp1');
gettext('08-Sys-SL-rst-imp1: 8-bits System Shift register to the left, with reset.  Block implementation 1');
gettext('16-Sys-SL-rst-imp1');
gettext('16-Sys-SL-rst-imp1: 16-bits System Shift register to the left, with reset.  Block implementation 1');
gettext('32-Sys-SL-rst-imp1');
gettext('32-Sys-SL-rst-imp1: 32-bits System Shift register to the left, with reset.  Block implementation 1');
gettext('02-Sys-SL-imp1');
gettext('02-Sys-SL-imp1: 2-bits System Shift register to the left.  Block implementation 1');
gettext('02-Sys-SL-imp2');
gettext('02-Sys-SL-imp2: 2-bits System Shift register to the left.  Block implementation 2');
gettext('04-Sys-SL-imp1');
gettext('Sys-SL-04-imp1: 4-bits System Shift register to the left.  Block implementation 1');
gettext('04-Sys-SL-imp2');
gettext('04-Sys-SL-imp2: 4-bits System Shift register to the left.  Block implementation 2');
gettext('08-Sys-SL-imp1');
gettext('08-Sys-SL-imp1: 8-bits System Shift register to the left.  Block implementation 1');
gettext('16-Sys-SL-imp1');
gettext('16-Sys-SL-imp1: 16-bits System Shift register to the left.  Block implementation 1');
gettext('32-Sys-SL-imp1');
gettext('32-Sys-SL-imp1: 32-bits System Shift register to the left.  Block implementation 1');
gettext('SR');
gettext('SR-ld');
gettext('SR-ld-rst');
gettext('SR-rst');
gettext('Sys-SR');
gettext('Sys-SR-ld');
gettext('Sys-SR-ld-rst');
gettext('Sys-SR-rst');
gettext('Blocks');
gettext('02-SR');
gettext('02-SR: 2 bits shift right register. Verilog implementation');
gettext('03-SR');
gettext('03-SR: 3 bits shift right register. Verilog implementation');
gettext('04-SR');
gettext('04-SR: 4 bits shift right register. Verilog implementation');
gettext('05-SR');
gettext('05-SR: 5 bits shift right register. Verilog implementation');
gettext('06-SR');
gettext('06-SR: 6 bits shift right register. Verilog implementation');
gettext('07-SR');
gettext('07-SR: 7 bits shift right register. Verilog implementation');
gettext('08-SR');
gettext('08-SR: 8 bits shift right register. Verilog implementation');
gettext('09-SR');
gettext('09-SR: 9 bits shift right register. Verilog implementation');
gettext('10-SR');
gettext('10-SR: 10 bits shift right register. Verilog implementation');
gettext('11-SR');
gettext('11-SR: 11 bits shift right register. Verilog implementation');
gettext('12-SR');
gettext('12-SR: 12 bits shift right register. Verilog implementation');
gettext('13-SR');
gettext('13-SR: 13 bits shift right register. Verilog implementation');
gettext('14-SR');
gettext('14-SR: 14 bits shift right register. Verilog implementation');
gettext('15-SR');
gettext('15-SR: 15 bits shift right register. Verilog implementation');
gettext('16-SR');
gettext('16-SR: 16 bits shift right register. Verilog implementation');
gettext('17-SR');
gettext('17-SR: 17 bits shift right register. Verilog implementation');
gettext('18-SR');
gettext('18-SR: 18 bits shift right register. Verilog implementation');
gettext('19-SR');
gettext('19-SR: 19 bits shift right register. Verilog implementation');
gettext('20-SR');
gettext('20-SR: 20 bits shift right register. Verilog implementation');
gettext('21-SR');
gettext('21-SR: 21 bits shift right register. Verilog implementation');
gettext('22-SR');
gettext('22-SR: 22 bits shift right register. Verilog implementation');
gettext('23-SR');
gettext('23-SR: 23 bits shift right register. Verilog implementation');
gettext('24-SR');
gettext('24-SR: 24 bits shift right register. Verilog implementation');
gettext('25-SR');
gettext('25-SR: 25 bits shift right register. Verilog implementation');
gettext('26-SR');
gettext('26-SR: 26 bits shift right register. Verilog implementation');
gettext('27-SR');
gettext('27-SR: 27 bits shift right register. Verilog implementation');
gettext('28-SR');
gettext('28-SR: 28 bits shift right register. Verilog implementation');
gettext('29-SR');
gettext('29-SR: 29 bits shift right register. Verilog implementation');
gettext('30-SR');
gettext('30-SR: 30 bits shift right register. Verilog implementation');
gettext('31-SR');
gettext('31-SR: 31 bits shift right register. Verilog implementation');
gettext('32-SR');
gettext('32-SR: 32 bits shift right register. Verilog implementation');
gettext('Blocks');
gettext('02-SR-ld');
gettext('02-SR-ld: 2 bits shift right register, with load. Verilog implementation');
gettext('03-SR-ld');
gettext('03-SR-ld: 3 bits shift right register, with load. Verilog implementation');
gettext('04-SR-ld');
gettext('04-SR-ld: 4 bits shift right register, with load. Verilog implementation');
gettext('05-SR-ld');
gettext('05-SR-ld: 5 bits shift right register, with load. Verilog implementation');
gettext('06-SR-ld');
gettext('06-SR-ld: 6 bits shift right register, with load. Verilog implementation');
gettext('07-SR-ld');
gettext('07-SR-ld: 7 bits shift right register, with load. Verilog implementation');
gettext('08-SR-ld');
gettext('08-SR-ld: 8 bits shift right register, with load. Verilog implementation');
gettext('09-SR-ld');
gettext('09-SR-ld: 9 bits shift right register, with load. Verilog implementation');
gettext('10-SR-ld');
gettext('10-SR-ld: 10 bits shift right register, with load. Verilog implementation');
gettext('11-SR-ld');
gettext('11-SR-ld: 11 bits shift right register, with load. Verilog implementation');
gettext('12-SR-ld');
gettext('12-SR-ld: 12 bits shift right register, with load. Verilog implementation');
gettext('13-SR-ld');
gettext('13-SR-ld: 13 bits shift right register, with load. Verilog implementation');
gettext('14-SR-ld');
gettext('14-SR-ld: 14 bits shift right register, with load. Verilog implementation');
gettext('15-SR-ld');
gettext('15-SR-ld: 15 bits shift right register, with load. Verilog implementation');
gettext('16-SR-ld');
gettext('16-SR-ld: 16 bits shift right register, with load. Verilog implementation');
gettext('17-SR-ld');
gettext('17-SR-ld: 17 bits shift right register, with load. Verilog implementation');
gettext('18-SR-ld');
gettext('18-SR-ld: 18 bits shift right register, with load. Verilog implementation');
gettext('19-SR-ld');
gettext('19-SR-ld: 19 bits shift right register, with load. Verilog implementation');
gettext('20-SR-ld');
gettext('20-SR-ld: 20 bits shift right register, with load. Verilog implementation');
gettext('21-SR-ld');
gettext('21-SR-ld: 21 bits shift right register, with load. Verilog implementation');
gettext('22-SR-ld');
gettext('22-SR-ld: 22 bits shift right register, with load. Verilog implementation');
gettext('23-SR-ld');
gettext('23-SR-ld: 23 bits shift right register, with load. Verilog implementation');
gettext('24-SR-ld');
gettext('24-SR-ld: 24 bits shift right register, with load. Verilog implementation');
gettext('25-SR-ld');
gettext('25-SR-ld: 25 bits shift right register, with load. Verilog implementation');
gettext('26-SR-ld');
gettext('26-SR-ld: 26 bits shift right register, with load. Verilog implementation');
gettext('27-SR-ld');
gettext('27-SR-ld: 27 bits shift right register, with load. Verilog implementation');
gettext('28-SR-ld');
gettext('28-SR-ld: 28 bits shift right register, with load. Verilog implementation');
gettext('29-SR-ld');
gettext('29-SR-ld: 29 bits shift right register, with load. Verilog implementation');
gettext('30-SR-ld');
gettext('30-SR-ld: 30 bits shift right register, with load. Verilog implementation');
gettext('31-SR-ld');
gettext('31-SR-ld: 31 bits shift right register, with load. Verilog implementation');
gettext('32-SR-ld');
gettext('32-SR-ld: 32 bits shift right register, with load. Verilog implementation');
gettext('Blocks');
gettext('02-SR-ld-rst');
gettext('02-SR-ld-rst: 2 bits shift right register, with load and reset. Verilog implementation');
gettext('03-SR-ld-rst');
gettext('03-SR-ld-rst: 3 bits shift right register, with load and reset. Verilog implementation');
gettext('04-SR-ld-rst');
gettext('04-SR-ld-rst: 4 bits shift right register, with load and reset. Verilog implementation');
gettext('05-SR-ld-rst');
gettext('05-SR-ld-rst: 5 bits shift right register, with load and reset. Verilog implementation');
gettext('06-SR-ld-rst');
gettext('06-SR-ld-rst: 6 bits shift right register, with load and reset. Verilog implementation');
gettext('07-SR-ld-rst');
gettext('07-SR-ld-rst: 7 bits shift right register, with load and reset. Verilog implementation');
gettext('08-SR-ld-rst');
gettext('08-SR-ld-rst: 8 bits shift right register, with load and reset. Verilog implementation');
gettext('09-SR-ld-rst');
gettext('09-SR-ld-rst: 9 bits shift right register, with load and reset. Verilog implementation');
gettext('10-SR-ld-rst');
gettext('10-SR-ld-rst: 10 bits shift right register, with load and reset. Verilog implementation');
gettext('11-SR-ld-rst');
gettext('11-SR-ld-rst: 11 bits shift right register, with load and reset. Verilog implementation');
gettext('12-SR-ld-rst');
gettext('12-SR-ld-rst: 12 bits shift right register, with load and reset. Verilog implementation');
gettext('13-SR-ld-rst');
gettext('13-SR-ld-rst: 13 bits shift right register, with load and reset. Verilog implementation');
gettext('14-SR-ld-rst');
gettext('14-SR-ld-rst: 14 bits shift right register, with load and reset. Verilog implementation');
gettext('15-SR-ld-rst');
gettext('15-SR-ld-rst: 15 bits shift right register, with load and reset. Verilog implementation');
gettext('16-SR-ld-rst');
gettext('16-SR-ld-rst: 16 bits shift right register, with load and reset. Verilog implementation');
gettext('17-SR-ld-rst');
gettext('17-SR-ld-rst: 17 bits shift right register, with load and reset. Verilog implementation');
gettext('18-SR-ld-rst');
gettext('18-SR-ld-rst: 18 bits shift right register, with load and reset. Verilog implementation');
gettext('19-SR-ld-rst');
gettext('19-SR-ld-rst: 19 bits shift right register, with load and reset. Verilog implementation');
gettext('20-SR-ld-rst');
gettext('20-SR-ld-rst: 20 bits shift right register, with load and reset. Verilog implementation');
gettext('21-SR-ld-rst');
gettext('21-SR-ld-rst: 21 bits shift right register, with load and reset. Verilog implementation');
gettext('22-SR-ld-rst');
gettext('22-SR-ld-rst: 22 bits shift right register, with load and reset. Verilog implementation');
gettext('23-SR-ld-rst');
gettext('23-SR-ld-rst: 23 bits shift right register, with load and reset. Verilog implementation');
gettext('24-SR-ld-rst');
gettext('24-SR-ld-rst: 24 bits shift right register, with load and reset. Verilog implementation');
gettext('25-SR-ld-rst');
gettext('25-SR-ld-rst: 25 bits shift right register, with load and reset. Verilog implementation');
gettext('26-SR-ld-rst');
gettext('26-SR-ld-rst: 26 bits shift right register, with load and reset. Verilog implementation');
gettext('27-SR-ld-rst');
gettext('27-SR-ld-rst: 27 bits shift right register, with load and reset. Verilog implementation');
gettext('28-SR-ld-rst');
gettext('28-SR-ld-rst: 28 bits shift right register, with load and reset. Verilog implementation');
gettext('29-SR-ld-rst');
gettext('29-SR-ld-rst: 29 bits shift right register, with load and reset. Verilog implementation');
gettext('30-SR-ld-rst');
gettext('30-SR-ld-rst: 30 bits shift right register, with load and reset. Verilog implementation');
gettext('31-SR-ld-rst');
gettext('31-SR-ld-rst: 31 bits shift right register, with load and reset. Verilog implementation');
gettext('32-SR-ld-rst');
gettext('32-SR-ld-rst: 32 bits shift right register, with load and reset. Verilog implementation');
gettext('02-SR-ld-rst-imp1');
gettext('SR-ld-rst-02-imp1: Shift register to the right, with load and reset.  Block implementation 1');
gettext('02-SR-ld-rst-imp2');
gettext('SR-ld-rst-02-imp2: Shift register to the right, with load.  Block implementation 2');
gettext('D Flip-Flop with load and reset. Implemented in verilog');
gettext('04-SR-ld-rst-imp1');
gettext('SR-ld-rst-04-imp1: Shift register to the right, with load and reset.  Block implementation 1');
gettext('Reg-rst-4-verilog: 4-bits Register with load and reset inputs. Verilog implementation');
gettext('SR1-4bits-verilog: Shift  a 4-bit value one bit right. MSB is filled with in. Verilog implementation');
gettext('04-SR-ld-rst-imp2');
gettext('SR-ld-rst-04-imp2: Shift register to the right, with load.  Block implementation 2');
gettext('08-SR-ld-rst-imp1');
gettext('SR-ld-rst-08-imp1: Shift register to the right, with load and reset.  Block implementation 1');
gettext('Reg-rst-8-verilog: 8-bits Register with load and reset inputs. Verilog implementation');
gettext('SR1-8bits-verilog: Shift  a 8-bit value one bit right. MSB is filled with in. Verilog implementation');
gettext('16-SR-ld-rst-imp1');
gettext('SR-ld-rst-16-imp1: Shift register to the right, with load and reset.  Block implementation 1');
gettext('SR1-16bits-verilog: Shift  a 16-bit value one bit right. MSB is filled with in. Verilog implementation');
gettext('Reg-rst-16-verilog: 16-bits Register with load and reset inputs. Verilog implementation');
gettext('32-SR-ld-rst-imp1');
gettext('SR-ld-rst-32-imp1: Shift register to the right, with load and reset.  Block implementation 1');
gettext('SR1-32bits-verilog: Shift  a 32-bit value one bit right. MSB is filled with in. Verilog implementation');
gettext('Reg-rst-32-verilog: 32-bits Register with load and reset inputs. Verilog implementation');
gettext('02-SR-ld-imp1');
gettext('02-SR-ld-imp1: Shift register to the right, with load.  Block implementation 1');
gettext('02-SR-ld-imp2');
gettext('SR-ld-02-imp2: Shift register to the right, with load.  Block implementation 2');
gettext('04-SR-ld-imp1');
gettext('04-SR-ld-imp1: Shift register to the right, with load.  Block implementation 1');
gettext('04-SR-ld-imp2');
gettext('SR-ld-04-imp2: Shift register to the right, with load.  Block implementation 2');
gettext('08-SR-ld-imp1');
gettext('08-SR-ld-imp1: Shift register to the right, with load.  Block implementation 1');
gettext('08-Reg: 8 bits Register. Verilog implementation');
gettext('16-SR-ld-imp1');
gettext('16-SR-ld-imp1: Shift register to the right, with load.  Block implementation 1');
gettext('16-Reg: 16 bits Register. Verilog implementation');
gettext('32-SR-ld-imp1');
gettext('32-SR-ld-imp1: Shift register to the right, with load.  Block implementation 1');
gettext('32-Reg: 32 bits Register. Verilog implementation');
gettext('Blocks');
gettext('02-SR-rst');
gettext('02-SR-rst: 2 bits shift right register, with reset. Verilog implementation');
gettext('03-SR-rst');
gettext('03-SR-rst: 3 bits shift right register, with reset. Verilog implementation');
gettext('04-SR-rst');
gettext('04-SR-rst: 4 bits shift right register, with reset. Verilog implementation');
gettext('05-SR-rst');
gettext('05-SR-rst: 5 bits shift right register, with reset. Verilog implementation');
gettext('06-SR-rst');
gettext('06-SR-rst: 6 bits shift right register, with reset. Verilog implementation');
gettext('07-SR-rst');
gettext('07-SR-rst: 7 bits shift right register, with reset. Verilog implementation');
gettext('08-SR-rst');
gettext('08-SR-rst: 8 bits shift right register, with reset. Verilog implementation');
gettext('09-SR-rst');
gettext('09-SR-rst: 9 bits shift right register, with reset. Verilog implementation');
gettext('10-SR-rst');
gettext('10-SR-rst: 10 bits shift right register, with reset. Verilog implementation');
gettext('11-SR-rst');
gettext('11-SR-rst: 11 bits shift right register, with reset. Verilog implementation');
gettext('12-SR-rst');
gettext('12-SR-rst: 12 bits shift right register, with reset. Verilog implementation');
gettext('13-SR-rst');
gettext('13-SR-rst: 13 bits shift right register, with reset. Verilog implementation');
gettext('14-SR-rst');
gettext('14-SR-rst: 14 bits shift right register, with reset. Verilog implementation');
gettext('15-SR-rst');
gettext('15-SR-rst: 15 bits shift right register, with reset. Verilog implementation');
gettext('16-SR-rst');
gettext('16-SR-rst: 16 bits shift right register, with reset. Verilog implementation');
gettext('17-SR-rst');
gettext('17-SR-rst: 17 bits shift right register, with reset. Verilog implementation');
gettext('18-SR-rst');
gettext('18-SR-rst: 18 bits shift right register, with reset. Verilog implementation');
gettext('19-SR-rst');
gettext('19-SR-rst: 19 bits shift right register, with reset. Verilog implementation');
gettext('20-SR-rst');
gettext('20-SR-rst: 20 bits shift right register, with reset. Verilog implementation');
gettext('21-SR-rst');
gettext('21-SR-rst: 21 bits shift right register, with reset. Verilog implementation');
gettext('22-SR-rst');
gettext('22-SR-rst: 22 bits shift right register, with reset. Verilog implementation');
gettext('23-SR-rst');
gettext('23-SR-rst: 23 bits shift right register, with reset. Verilog implementation');
gettext('24-SR-rst');
gettext('24-SR-rst: 24 bits shift right register, with reset. Verilog implementation');
gettext('25-SR-rst');
gettext('25-SR-rst: 25 bits shift right register, with reset. Verilog implementation');
gettext('26-SR-rst');
gettext('26-SR-rst: 26 bits shift right register, with reset. Verilog implementation');
gettext('27-SR-rst');
gettext('27-SR-rst: 27 bits shift right register, with reset. Verilog implementation');
gettext('28-SR-rst');
gettext('28-SR-rst: 28 bits shift right register, with reset. Verilog implementation');
gettext('29-SR-rst');
gettext('29-SR-rst: 29 bits shift right register, with reset. Verilog implementation');
gettext('30-SR-rst');
gettext('30-SR-rst: 30 bits shift right register, with reset. Verilog implementation');
gettext('31-SR-rst');
gettext('31-SR-rst: 31 bits shift right register, with reset. Verilog implementation');
gettext('32-SR-rst');
gettext('32-SR-rst: 32 bits shift right register, with reset. Verilog implementation');
gettext('02-SR-rst-imp1');
gettext('02-SR-rst-imp1: 2-bits Shift register to the right, with the reset.  Block implementation 1');
gettext('02-SR-rst-imp2');
gettext('02-SR-rst-imp2: 2-bits Shift register to the right, with reset.  Block implementation 2');
gettext('04-SR-rst-imp1');
gettext('04-SR-rst-imp1: 2-bits Shift register to the right, with reset.  Block implementation 1');
gettext('04-SR-rst-imp2');
gettext('04-SR-rst-imp2: 4-bits Shift register to the right, with reset.  Block implementation 2');
gettext('08-SR-rst-imp1');
gettext('08-SR-rst-imp1: 8-bits Shift register to the right, with reset.  Block implementation 1');
gettext('08-Reg-rst: 8 bits Register with reset. Verilog implementation');
gettext('16-SR-rst-imp1');
gettext('16-SR-rst-imp1: Shift register to the right, with reset.  Block implementation 1');
gettext('16-Reg-rst: 16 bits Register with reset. Verilog implementation');
gettext('32-SR-rst-imp1');
gettext('32-SR-rst-imp1: Shift register to the right, with reset.  Block implementation 1');
gettext('32-Reg-rst: 32 bits Register with reset. Verilog implementation');
gettext('02-SR02-imp1');
gettext('02-SR-imp1: 2-bits Shift register to the right.  Block implementation 1');
gettext('02-SR02-imp2');
gettext('02-SR-imp2: 2-bits Shift register to the right.  Block implementation 2');
gettext('04-SR-imp1');
gettext('04-SR-imp1: 4-bits Shift register to the right.  Block implementation 1');
gettext('04-SR-imp2');
gettext('04-SR-imp2: 4-bits Shift register to the right.  Block implementation 2');
gettext('08-SR-imp1');
gettext('08-SR-imp1: 8-bits Shift register to the right.  Block implementation 1');
gettext('16-SR-imp1');
gettext('16-SR-imp1: 16-bits Shift register to the right.  Block implementation 1');
gettext('32-SR-imp1');
gettext('32-SR-imp1: 32-bits Shift register to the right.  Block implementation 1');
gettext('Blocks');
gettext('02-Sys-SR');
gettext('02-Sys-SR: 2 bits system shift right register. Verilog implementation');
gettext('03-Sys-SR');
gettext('03-Sys-SR: 3 bits system shift right register. Verilog implementation');
gettext('04-Sys-SR');
gettext('04-Sys-SR: 4 bits system shift right register. Verilog implementation');
gettext('05-Sys-SR');
gettext('05-Sys-SR: 5 bits system shift right register. Verilog implementation');
gettext('06-Sys-SR');
gettext('06-Sys-SR: 6 bits system shift right register. Verilog implementation');
gettext('07-Sys-SR');
gettext('07-Sys-SR: 7 bits system shift right register. Verilog implementation');
gettext('08-Sys-SR');
gettext('08-Sys-SR: 8 bits system shift right register. Verilog implementation');
gettext('09-Sys-SR');
gettext('09-Sys-SR: 9 bits system shift right register. Verilog implementation');
gettext('10-Sys-SR');
gettext('10-Sys-SR: 10 bits system shift right register. Verilog implementation');
gettext('11-Sys-SR');
gettext('11-Sys-SR: 11 bits system shift right register. Verilog implementation');
gettext('12-Sys-SR');
gettext('12-Sys-SR: 12 bits system shift right register. Verilog implementation');
gettext('13-Sys-SR');
gettext('13-Sys-SR: 13 bits system shift right register. Verilog implementation');
gettext('14-Sys-SR');
gettext('14-Sys-SR: 14 bits system shift right register. Verilog implementation');
gettext('15-Sys-SR');
gettext('15-Sys-SR: 15 bits system shift right register. Verilog implementation');
gettext('16-Sys-SR');
gettext('16-Sys-SR: 16 bits system shift right register. Verilog implementation');
gettext('17-Sys-SR');
gettext('17-Sys-SR: 17 bits system shift right register. Verilog implementation');
gettext('18-Sys-SR');
gettext('18-Sys-SR: 18 bits system shift right register. Verilog implementation');
gettext('19-Sys-SR');
gettext('19-Sys-SR: 19 bits system shift right register. Verilog implementation');
gettext('20-Sys-SR');
gettext('20-Sys-SR: 20 bits system shift right register. Verilog implementation');
gettext('21-Sys-SR');
gettext('21-Sys-SR: 21 bits system shift right register. Verilog implementation');
gettext('22-Sys-SR');
gettext('22-Sys-SR: 22 bits system shift right register. Verilog implementation');
gettext('23-Sys-SR');
gettext('23-Sys-SR: 23 bits system shift right register. Verilog implementation');
gettext('24-Sys-SR');
gettext('24-Sys-SR: 24 bits system shift right register. Verilog implementation');
gettext('25-Sys-SR');
gettext('25-Sys-SR: 25 bits system shift right register. Verilog implementation');
gettext('26-Sys-SR');
gettext('26-Sys-SR: 26 bits system shift right register. Verilog implementation');
gettext('27-Sys-SR');
gettext('27-Sys-SR: 27 bits system shift right register. Verilog implementation');
gettext('28-Sys-SR');
gettext('28-Sys-SR: 28 bits system shift right register. Verilog implementation');
gettext('29-Sys-SR');
gettext('29-Sys-SR: 29 bits system shift right register. Verilog implementation');
gettext('30-Sys-SR');
gettext('30-Sys-SR: 30 bits system shift right register. Verilog implementation');
gettext('31-Sys-SR');
gettext('31-Sys-SR: 31 bits system shift right register. Verilog implementation');
gettext('32-Sys-SR');
gettext('32-Sys-SR: 32 bits system shift right register. Verilog implementation');
gettext('Blocks');
gettext('02-Sys-SR-ld');
gettext('02-Sys-SR-ld: 2 bits system shift right register with load input. Verilog implementation');
gettext('03-Sys-SR-ld');
gettext('03-Sys-SR-ld: 3 bits system shift right register with load input. Verilog implementation');
gettext('04-Sys-SR-ld');
gettext('04-Sys-SR-ld: 4 bits system shift right register with load input. Verilog implementation');
gettext('05-Sys-SR-ld');
gettext('05-Sys-SR-ld: 5 bits system shift right register with load input. Verilog implementation');
gettext('06-Sys-SR-ld');
gettext('06-Sys-SR-ld: 6 bits system shift right register with load input. Verilog implementation');
gettext('07-Sys-SR-ld');
gettext('07-Sys-SR-ld: 7 bits system shift right register with load input. Verilog implementation');
gettext('08-Sys-SR-ld');
gettext('08-Sys-SR-ld: 8 bits system shift right register with load input. Verilog implementation');
gettext('09-Sys-SR-ld');
gettext('09-Sys-SR-ld: 9 bits system shift right register with load input. Verilog implementation');
gettext('10-Sys-SR-ld');
gettext('10-Sys-SR-ld: 10 bits system shift right register with load input. Verilog implementation');
gettext('11-Sys-SR-ld');
gettext('11-Sys-SR-ld: 11 bits system shift right register with load input. Verilog implementation');
gettext('12-Sys-SR-ld');
gettext('12-Sys-SR-ld: 12 bits system shift right register with load input. Verilog implementation');
gettext('13-Sys-SR-ld');
gettext('13-Sys-SR-ld: 13 bits system shift right register with load input. Verilog implementation');
gettext('14-Sys-SR-ld');
gettext('14-Sys-SR-ld: 14 bits system shift right register with load input. Verilog implementation');
gettext('15-Sys-SR-ld');
gettext('15-Sys-SR-ld: 15 bits system shift right register with load input. Verilog implementation');
gettext('16-Sys-SR-ld');
gettext('16-Sys-SR-ld: 16 bits system shift right register with load input. Verilog implementation');
gettext('17-Sys-SR-ld');
gettext('17-Sys-SR-ld: 17 bits system shift right register with load input. Verilog implementation');
gettext('18-Sys-SR-ld');
gettext('18-Sys-SR-ld: 18 bits system shift right register with load input. Verilog implementation');
gettext('19-Sys-SR-ld');
gettext('19-Sys-SR-ld: 19 bits system shift right register with load input. Verilog implementation');
gettext('20-Sys-SR-ld');
gettext('20-Sys-SR-ld: 20 bits system shift right register with load input. Verilog implementation');
gettext('21-Sys-SR-ld');
gettext('21-Sys-SR-ld: 21 bits system shift right register with load input. Verilog implementation');
gettext('22-Sys-SR-ld');
gettext('22-Sys-SR-ld: 22 bits system shift right register with load input. Verilog implementation');
gettext('23-Sys-SR-ld');
gettext('23-Sys-SR-ld: 23 bits system shift right register with load input. Verilog implementation');
gettext('24-Sys-SR-ld');
gettext('24-Sys-SR-ld: 24 bits system shift right register with load input. Verilog implementation');
gettext('25-Sys-SR-ld');
gettext('25-Sys-SR-ld: 25 bits system shift right register with load input. Verilog implementation');
gettext('26-Sys-SR-ld');
gettext('26-Sys-SR-ld: 26 bits system shift right register with load input. Verilog implementation');
gettext('27-Sys-SR-ld');
gettext('27-Sys-SR-ld: 27 bits system shift right register with load input. Verilog implementation');
gettext('28-Sys-SR-ld');
gettext('28-Sys-SR-ld: 28 bits system shift right register with load input. Verilog implementation');
gettext('29-Sys-SR-ld');
gettext('29-Sys-SR-ld: 29 bits system shift right register with load input. Verilog implementation');
gettext('30-Sys-SR-ld');
gettext('30-Sys-SR-ld: 30 bits system shift right register with load input. Verilog implementation');
gettext('31-Sys-SR-ld');
gettext('31-Sys-SR-ld: 31 bits system shift right register with load input. Verilog implementation');
gettext('32-Sys-SR-ld');
gettext('32-Sys-SR-ld: 32 bits system shift right register with load input. Verilog implementation');
gettext('Blocks');
gettext('02-Sys-SR-ld-rst');
gettext('02-Sys-SR-ld-rst: 2 bits system shift right register with load and reset. Verilog implementation');
gettext('03-Sys-SR-ld-rst');
gettext('03-Sys-SR-ld-rst: 3 bits system shift right register with load and reset. Verilog implementation');
gettext('04-Sys-SR-ld-rst');
gettext('04-Sys-SR-ld-rst: 4 bits system shift right register with load and reset. Verilog implementation');
gettext('05-Sys-SR-ld-rst');
gettext('05-Sys-SR-ld-rst: 5 bits system shift right register with load and reset. Verilog implementation');
gettext('06-Sys-SR-ld-rst');
gettext('06-Sys-SR-ld-rst: 6 bits system shift right register with load and reset. Verilog implementation');
gettext('07-Sys-SR-ld-rst');
gettext('07-Sys-SR-ld-rst: 7 bits system shift right register with load and reset. Verilog implementation');
gettext('08-Sys-SR-ld-rst');
gettext('08-Sys-SR-ld-rst: 8 bits system shift right register with load and reset. Verilog implementation');
gettext('09-Sys-SR-ld-rst');
gettext('09-Sys-SR-ld-rst: 9 bits system shift right register with load and reset. Verilog implementation');
gettext('10-Sys-SR-ld-rst');
gettext('10-Sys-SR-ld-rst: 10 bits system shift right register with load and reset. Verilog implementation');
gettext('11-Sys-SR-ld-rst');
gettext('11-Sys-SR-ld-rst: 11 bits system shift right register with load and reset. Verilog implementation');
gettext('12-Sys-SR-ld-rst');
gettext('12-Sys-SR-ld-rst: 12 bits system shift right register with load and reset. Verilog implementation');
gettext('13-Sys-SR-ld-rst');
gettext('13-Sys-SR-ld-rst: 13 bits system shift right register with load and reset. Verilog implementation');
gettext('14-Sys-SR-ld-rst');
gettext('14-Sys-SR-ld-rst: 14 bits system shift right register with load and reset. Verilog implementation');
gettext('15-Sys-SR-ld-rst');
gettext('15-Sys-SR-ld-rst: 15 bits system shift right register with load and reset. Verilog implementation');
gettext('16-Sys-SR-ld-rst');
gettext('16-Sys-SR-ld-rst: 16 bits system shift right register with load and reset. Verilog implementation');
gettext('17-Sys-SR-ld-rst');
gettext('17-Sys-SR-ld-rst: 17 bits system shift right register with load and reset. Verilog implementation');
gettext('18-Sys-SR-ld-rst');
gettext('18-Sys-SR-ld-rst: 18 bits system shift right register with load and reset. Verilog implementation');
gettext('19-Sys-SR-ld-rst');
gettext('19-Sys-SR-ld-rst: 19 bits system shift right register with load and reset. Verilog implementation');
gettext('20-Sys-SR-ld-rst');
gettext('20-Sys-SR-ld-rst: 20 bits system shift right register with load and reset. Verilog implementation');
gettext('21-Sys-SR-ld-rst');
gettext('21-Sys-SR-ld-rst: 21 bits system shift right register with load and reset. Verilog implementation');
gettext('22-Sys-SR-ld-rst');
gettext('22-Sys-SR-ld-rst: 22 bits system shift right register with load and reset. Verilog implementation');
gettext('23-Sys-SR-ld-rst');
gettext('23-Sys-SR-ld-rst: 23 bits system shift right register with load and reset. Verilog implementation');
gettext('24-Sys-SR-ld-rst');
gettext('24-Sys-SR-ld-rst: 24 bits system shift right register with load and reset. Verilog implementation');
gettext('25-Sys-SR-ld-rst');
gettext('25-Sys-SR-ld-rst: 25 bits system shift right register with load and reset. Verilog implementation');
gettext('26-Sys-SR-ld-rst');
gettext('26-Sys-SR-ld-rst: 26 bits system shift right register with load and reset. Verilog implementation');
gettext('27-Sys-SR-ld-rst');
gettext('27-Sys-SR-ld-rst: 27 bits system shift right register with load and reset. Verilog implementation');
gettext('28-Sys-SR-ld-rst');
gettext('28-Sys-SR-ld-rst: 28 bits system shift right register with load and reset. Verilog implementation');
gettext('29-Sys-SR-ld-rst');
gettext('29-Sys-SR-ld-rst: 29 bits system shift right register with load and reset. Verilog implementation');
gettext('30-Sys-SR-ld-rst');
gettext('30-Sys-SR-ld-rst: 30 bits system shift right register with load and reset. Verilog implementation');
gettext('31-Sys-SR-ld-rst');
gettext('31-Sys-SR-ld-rst: 31 bits system shift right register with load and reset. Verilog implementation');
gettext('32-Sys-SR-ld-rst');
gettext('32-Sys-SR-ld-rst: 32 bits system shift right register with load and reset. Verilog implementation');
gettext('02-Sys-SR-ld-rst-imp1');
gettext('02-SR-ld-rst-imp1: Shift register to the right, with load and reset.  Block implementation 1');
gettext('02-Sys-SR-ld-rst-imp2');
gettext('02-SR-ld-rst-imp2: Shift register to the right, with load.  Block implementation 2');
gettext('04-Sys-SR-ld-rst-imp1');
gettext('04-SR-ld-rst-imp1: Shift register to the right, with load and reset.  Block implementation 1');
gettext('04-Sys-SR-ld-rst-imp2');
gettext('04-SR-ld-rst-imp2: Shift register to the right, with load.  Block implementation 2');
gettext('08-Sys-SR-ld-rst-imp1');
gettext('08-SR-ld-rst-imp1: Shift register to the right, with load and reset.  Block implementation 1');
gettext('16-Sys-SR-ld-rst-imp1');
gettext('16-SR-ld-rst-imp1: Shift register to the right, with load and reset.  Block implementation 1');
gettext('32-Sys-SR-ld-rst');
gettext('32-SR-ld-rst-imp1: Shift register to the right, with load and reset.  Block implementation 1');
gettext('02-Sys-SR-ld-imp1');
gettext('02-Sys-SR-ld-imp1: 2-bits System Shift register to the right, with load. Block implementation 1');
gettext('02-Sys-SR-ld-imp2');
gettext('02-Sys-SR-ld-imp2: 2-bits System Shift register to the right, with load. Block implementation 2');
gettext('04-Sys-SR-ld-imp1');
gettext('04-Sys-SR-ld-imp1: 4-bits System Shift register to the right, with load. Block implementation 1');
gettext('04-Sys-SR-ld-imp2');
gettext('04-Sys-SR-ld-imp2: 4-bits System Shift register to the right, with load. Block implementation 2');
gettext('08-Sys-SR-ld-imp1');
gettext('08-Sys-SR-ld-imp1: 8-bits System Shift register to the right, with load. Block implementation 1');
gettext('16-Sys-SR-ld-imp1');
gettext('16-Sys-SR-ld-imp1: 16-bits System Shift register to the right, with load. Block implementation 1');
gettext('32-Sys-SR-ld-imp1');
gettext('32-Sys-SR32-ld-imp1: 32-bits System Shift register to the right, with load. Block implementation 1');
gettext('Blocks');
gettext('02-Sys-SR-rst');
gettext('02-Sys-SR-rst: 2 bits system shift right register with reset. Verilog implementation');
gettext('03-Sys-SR-rst');
gettext('03-Sys-SR-rst: 3 bits system shift right register with reset. Verilog implementation');
gettext('04-Sys-SR-rst');
gettext('04-Sys-SR-rst: 4 bits system shift right register with reset. Verilog implementation');
gettext('05-Sys-SR-rst');
gettext('05-Sys-SR-rst: 5 bits system shift right register with reset. Verilog implementation');
gettext('06-Sys-SR-rst');
gettext('06-Sys-SR-rst: 6 bits system shift right register with reset. Verilog implementation');
gettext('07-Sys-SR-rst');
gettext('07-Sys-SR-rst: 7 bits system shift right register with reset. Verilog implementation');
gettext('08-Sys-SR-rst');
gettext('08-Sys-SR-rst: 8 bits system shift right register with reset. Verilog implementation');
gettext('09-Sys-SR-rst');
gettext('09-Sys-SR-rst: 9 bits system shift right register with reset. Verilog implementation');
gettext('10-Sys-SR-rst');
gettext('10-Sys-SR-rst: 10 bits system shift right register with reset. Verilog implementation');
gettext('11-Sys-SR-rst');
gettext('11-Sys-SR-rst: 11 bits system shift right register with reset. Verilog implementation');
gettext('12-Sys-SR-rst');
gettext('12-Sys-SR-rst: 12 bits system shift right register with reset. Verilog implementation');
gettext('13-Sys-SR-rst');
gettext('13-Sys-SR-rst: 13 bits system shift right register with reset. Verilog implementation');
gettext('14-Sys-SR-rst');
gettext('14-Sys-SR-rst: 14 bits system shift right register with reset. Verilog implementation');
gettext('15-Sys-SR-rst');
gettext('15-Sys-SR-rst: 15 bits system shift right register with reset. Verilog implementation');
gettext('16-Sys-SR-rst');
gettext('16-Sys-SR-rst: 16 bits system shift right register with reset. Verilog implementation');
gettext('17-Sys-SR-rst');
gettext('17-Sys-SR-rst: 17 bits system shift right register with reset. Verilog implementation');
gettext('18-Sys-SR-rst');
gettext('18-Sys-SR-rst: 18 bits system shift right register with reset. Verilog implementation');
gettext('19-Sys-SR-rst');
gettext('19-Sys-SR-rst: 19 bits system shift right register with reset. Verilog implementation');
gettext('20-Sys-SR-rst');
gettext('20-Sys-SR-rst: 20 bits system shift right register with reset. Verilog implementation');
gettext('21-Sys-SR-rst');
gettext('21-Sys-SR-rst: 21 bits system shift right register with reset. Verilog implementation');
gettext('22-Sys-SR-rst');
gettext('22-Sys-SR-rst: 22 bits system shift right register with reset. Verilog implementation');
gettext('23-Sys-SR-rst');
gettext('23-Sys-SR-rst: 23 bits system shift right register with reset. Verilog implementation');
gettext('24-Sys-SR-rst');
gettext('24-Sys-SR-rst: 24 bits system shift right register with reset. Verilog implementation');
gettext('25-Sys-SR-rst');
gettext('25-Sys-SR-rst: 25 bits system shift right register with reset. Verilog implementation');
gettext('26-Sys-SR-rst');
gettext('26-Sys-SR-rst: 26 bits system shift right register with reset. Verilog implementation');
gettext('27-Sys-SR-rst');
gettext('27-Sys-SR-rst: 27 bits system shift right register with reset. Verilog implementation');
gettext('28-Sys-SR-rst');
gettext('28-Sys-SR-rst: 28 bits system shift right register with reset. Verilog implementation');
gettext('29-Sys-SR-rst');
gettext('29-Sys-SR-rst: 29 bits system shift right register with reset. Verilog implementation');
gettext('30-Sys-SR-rst');
gettext('30-Sys-SR-rst: 30 bits system shift right register with reset. Verilog implementation');
gettext('31-Sys-SR-rst');
gettext('31-Sys-SR-rst: 31 bits system shift right register with reset. Verilog implementation');
gettext('32-Sys-SR-rst');
gettext('32-Sys-SR-rst: 32 bits system shift right register with reset. Verilog implementation');
gettext('02-Sys-SR-rst-imp1');
gettext('02-Sys-SR-rst: 2-bits System Shift register to the right, with reset.  Block iplementation 1');
gettext('02-Sys-SR-rst-imp2');
gettext('Sys-SR-rst-02: 2-bits System Shift register to the right, with reset.  Block iplementation 2');
gettext('04-Sys-SR4-rst-imp1');
gettext('04-Sys-SR-rst-imp2: 4-bits System Shift register to the right, with reset.  Block implementation 1');
gettext('04-Sys-SR4-rst-imp2');
gettext('04-Sys-SR-rst-imp1: 4-bits System Shift register to the right, with reset.  Block implementation 2');
gettext('08-Sys-SR-rst-imp1');
gettext('08-Sys-SR-rst-imp2: 8-bits System Shift register to the right, with reset.  Block implementation 1');
gettext('16-Sys-SR-rst-imp1');
gettext('16-Sys-SR-rst-imp2: 16-bits System Shift register to the right, with reset.  Block implementation 1');
gettext('32-Sys-SR-rst-imp1');
gettext('32-Sys-SR-rst-imp2: 32-bits System Shift register to the right, with reset.  Block implementation 1');
gettext('02-Sys-SR-imp1');
gettext('02-Sys-SR-blocks-imp1: 2-bits System Shift register to the right. Block implementation 1');
gettext('02-Sys-SR-imp2');
gettext('02-Sys-SR-blocks-imp2: 2-bits System Shift register to the right. Block implementation 2');
gettext('04-Sys-SR-imp1');
gettext('04-Sys-SR-04-blocks-imp1: 4-bits System Shift register to the right. Block implementation 1');
gettext('04-Sys-SR-imp2');
gettext('04-Sys-SR-imp2: 4-bits System Shift register to the right. Block implementation 2');
gettext('08-Sys-SR-imp1');
gettext('08-Sys-SR-blocks-imp1: 8-bits System Shift register to the right. Block implementation 1');
gettext('08-Sys-SR-imp2');
gettext('08-Sys-SR-imp2: 8-bits System Shift register to the right. Block implementation 2');
gettext('Bus8-Join-half: Join the two same halves into an 8-bits Bus');
gettext('16-Sys-SR-imp1');
gettext('16-Sys-SR-blocks-imp1: 16-bits System Shift register to the right. Block implementation 1');
gettext('32-Sys-SR-imp1');
gettext('32-Sys-SR-blocks-imp1: 32-bits System Shift register to the right. Block implementation 1');
gettext('01-Sys-SR-2bits-unary-counter');
gettext('02-Sys-SR-8bits-unary-counter');
gettext('03-Sys-SR-rst');
gettext('04-Sys-SR-ld-paralell-serial');
gettext('05-Sys-SR-ld-paralell-serial');
gettext('06-Sys-SR-ld-serial-addition');
gettext('07-SR-manual-unary-counter');
gettext('08-SR-rst-module5-unary-counter');
gettext('09-SR-ld-serial-tx-rx');
gettext('10-SR-ld-rst-serial-tx-rx-loop');
gettext('11-SRL-manual-unary-counter-up-down');
gettext('12-SRL-rst-up-down-progress-bar');
gettext('00-Index');
gettext('02-SL-rst: 2 bits shift left register with resetVerilog implementation');
gettext('<DESCRIPCION>');
gettext('# INDEX: IceSRegs Collection');
gettext('## Right');
gettext('### System Registers');
gettext('### Standard Registers');
gettext('## Left');
gettext('## Left-Right');
gettext('Alhambra-II');
gettext('01-Sys-SR-2bits-unary-counter');
gettext('Constant bit 1');
gettext('Button-tic: Configurable button that emits a tic when it is pressed');
gettext('Rising-edge detector. It generates a 1-period pulse (tic) when a rising edge is detected on the input. Block implementation');
gettext('NOT gate (Verilog implementation)');
gettext('Two bits input And gate');
gettext('Configurable button (pull-up on/off. Not on/off)');
gettext('FPGA internal pull-up configuration on the input port');
gettext('Select positive or negative logic for the input (0=positive, 1=negative)');
gettext('Valor genérico constante, de 1 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('XOR gate: two bits input xor gate');
gettext('Remove the rebound on a mechanical switch');
gettext('Edges detector. It generates a 1-period pulse (tic) when either a rising edge or a falling edge is detected on the input. Block implementation');
gettext('16-bits Syscounter with reset');
gettext('Inc1-16bit: Increment a 16-bits number by one');
gettext('AdderK-16bit: Adder of 16-bit operand and 16-bit constant');
gettext('Generic: 16-bits generic constant');
gettext('Adder-16bits: Adder of two operands of 16 bits');
gettext('Bus16-Split-half: Split the 16-bits bus into two buses of the same size');
gettext('Adder-8bits: Adder of two operands of 8 bits');
gettext('Bus8-Split-half: Split the 8-bits bus into two buses of the same size');
gettext('Adder-4bits: Adder of two operands of 4 bits');
gettext('Adder-1bit: Adder of two operands of 1 bit');
gettext('AdderC-1bit: Adder of two operands of 1 bit plus the carry in');
gettext('Constant bit 0');
gettext('AdderC-4bits: Adder of two operands of 4 bits and Carry in');
gettext('AdderC-8bits: Adder of two operands of 8 bits and Carry in');
gettext('Bus16-Join-half: Join the two same halves into an 16-bits Bus');
gettext('Sync-x01: 1-bit input with the system clock domain (Verilog implementation)');
gettext('02-Uint08: 2 bits unsigned integer extension to 8 bits. Verilog implementation');
gettext('Data Ledoscope. 8 samples of 8bits data are taken initially, at the system clock rate');
gettext('8-to-1 Multplexer (8-bit channels) (Verilog implementation)');
gettext('OR-BUS3-verilog: OR gate with 3-bits bus input. Verilog implementation');
gettext('RS-FF-set-verilog. RS Flip-flop with priority set. Implementation in verilog');
gettext('3-bits Syscounter');
gettext('Inc1-3bit: Increment a 3-bits number by one');
gettext('AdderK-3bit: Adder of 3-bit operand and 3-bit constant');
gettext('Generic: 3-bits generic constant (0-7)');
gettext('Adder-3bits: Adder of two operands of 3 bits');
gettext('Bus3-Split-all: Split the 3-bits bus into three wires');
gettext('Bus3-Join-all: Joint three wires into a 3-bits Bus');
gettext('03-Sys-reg: 3 bits system register. Verilog implementation');
gettext('Counter-x03: 3-bits counter');
gettext('03-Reg: 3 bits Register. Verilog implementation');
gettext('## Example 1: Sys-SR Register: 2-bits unary counter\n\nThe data from the shif register is captured by a data OSCILOSCOPE ');
gettext('Sys-Shit-Right');
gettext('| Cycle    | 0  | 1  | 2  | 3  |\n|----------|----|----|----|----|\n| Register | 00 | 10 | 11 | 11 |\n');
gettext('## Meassure with LEDOSCOPE-data\n\nIt stores four samples taken at the first four cycles  \n(cycles 0,1 2 and 3)');
gettext('Select the sample to show  \non the LEDs ');
gettext('Showing the sample 0');
gettext('Convert the 2-bit value to  \nan 8-bit value (The most  \nsignificant bits are filled  \nwith 0)');
gettext('Button state signal');
gettext('Tic: button pressed');
gettext('Rising edge detector');
gettext('Pull up on/off');
gettext('Not on/off');
gettext('## Rising edge detector\n\nIt generates a 1-period pulse (tic) when a rising edge is detected on the  \ninput signal');
gettext('Input signal');
gettext('Current signal  \nstate');
gettext('Signal state in the previous  \nclock cycle');
gettext('If the current signal is 1 and its value in  \nthe previous clock cycle was 0, it means  \nthat a rising edge has been detected!  \nThe output es 1\n\nIn any other case the output is 0');
gettext('**Delay**: 0 clock cycles \n\nThere is no delay between the arrival of a rising edge  \nand its detection');
gettext('Input');
gettext('Internal pull-up  \n* 0: OFF\n* 1: ON');
gettext('Synchronization stage');
gettext('Normalization stage\n\n* 0: Wire\n* 1: signal inverted');
gettext('Debouncing stage');
gettext('### Pull-up parameter:\n\n0: No pull-up  \n1: Pull-up activated');
gettext('Only an FPGA pin can  \nbe connected here!!!');
gettext('The pull-up is connected  \nby default');
gettext('When k=0, it works like a wire  \n(The output is equal to the input)  \nWhen k=1, it act as a not gate\n(The output is the inverse of the input)');
gettext('### Truth table for XOR\n\n| k | input | output | function |\n|---|-------|--------|----------|\n| 0 | 0     |  0     | wire     |\n| 0 | 1     |  1     | wire     |\n| 1 | 0     |  1     | Not      |\n| 1 | 1     |  0     | Not      |');
gettext('Edge detector');
gettext('Whenever there is a change in  \nthe input, the counter is started');
gettext('If the counter reaches it maximum  \nvalue, the input is considered stable  \nand it is captured');
gettext('### Time calculation\n\nFor CLK=12MHZ, a 16-bit counter reaches its  \nmaximum every 2 ** 16 * 1/F = 5.5ms aprox  \nIF more time is needed for debouncing,  \nuse a counter with more bits (17, 18...)');
gettext('## Debouncer  \n\nA value is considered stable when  \nthere is no changes during 5.5ms  \naprox. When a value is stable it is  \ncaptured on the output flip-flop');
gettext('Stable output');
gettext('Counter');
gettext('## Edges detector\n\nIt generates a 1-period pulse (tic) when an edge (Rising or falling) is detected on the  \ninput signal');
gettext('The output is 1 if the current value is 1 and the  \nprevious 0, or if the current value is 0 and the  \nprevious 1\n');
gettext('In any other case the output is 0');
gettext('Select which sample is shown  \non the LEDs');
gettext('Sample 0');
gettext('Sample 1');
gettext('Enable the capture ');
gettext('This signal is 1 initially');
gettext('RS-flip-flop');
gettext('The Flip-flips is reset  \nat the end of cycle 3');
gettext('4-cycles with pulse');
gettext('Sample 2');
gettext('Sample 3');
gettext('Sample number currently  \ndisplayed');
gettext('01-Sys-SR-2bits-unary-counter');
gettext('Alhambra-II');
gettext('02-Sys-SR-8bits-unary-counter');
gettext('## Example 2: Sys-SR Register: 8-bits unary counter\n\nThe data from the shif register is captured by a data OSCILOSCOPE ');
gettext('| Cycle    | 0        | 1        | 2        | 3        | 4        | 5        | 6        | 7        |\n|----------|----------|----------|----------|----------|----------|----------|----------|----------|\n| Register | 10000000 | 11000000 | 11100000 | 11110000 | 11111000 | 11111100 | 11111110 | 11111111 |\n');
gettext('## Meassure with LEDOSCOPE-data\n\nIt stores eight samples taken at the first eight cycles  \n(cycles 0-7)');
gettext('02-Sys-SR-8bits-unary-counter');
gettext('Alhambra-II');
gettext('03-Sys-SR-rst-2bits-module-3-unary-counter');
gettext('## Example 3: Sys-SR reset Register: 2-bits module-3 unary counter\n\nThe data from the shif register is captured by a data OSCILOSCOPE ');
gettext('Sys-Shit-Right-reset');
gettext('| Cycle    | 0  | 1  | 2  | 3  | 4 | 5 | 6 | 7 |\n|----------|----|----|----|----|---|---|---|---|\n| Register | 00 | 10 | 11 | 00 | 10| 11| 00| 10|\n| reset    |  0 |  0 |  1 |  0 |  0|  1|  0|  0|\n');
gettext('## Meassure with LEDOSCOPE-data\n\nIt stores four samples taken at the first eight cycles  \n(cycles 0-7)');
gettext('The registers least significant bit is used as  \nthe reset signal');
gettext('03-Sys-SR-rst-2bits-module-3-unary-counter');
gettext('Alhambra-II');
gettext('04-Sys-SR-ld-paralell-serial');
gettext('03-Uint08: 3 bits unsigned integer extension to 8 bits. Verilog implementation');
gettext('## Example 4: Sys-SR load Register: Paralell to serial conversion\n\nExample of paralell to serial conversion of two numbers of 3-bits. The first value is loaded into the  \nregister on cycle 0. Then it is shifted to the right (serial output). The load signal is actived again  \non cycle 3, so that the second value is loaded into the register and shifted\n\nThe data from the shif register is captured by a data OSCILOSCOPE ');
gettext('Sys-Shit-Right-load');
gettext('| Cycle    | 0   | 1   | 2  | 3  | 4 | 5 | 6 | 7 |\n|----------|-----|-----|----|----|---|---|---|---|\n| Register | 000 | 101 | 010| 001|111|011|001|000|\n| load     |  1  |  0  |  0 |  1 |  0|  0|  0|  0|\n');
gettext('Convert the 3-bit value to  \nan 8-bit value (The most  \nsignificant bits are filled  \nwith 0)');
gettext('Values to be converted to serial');
gettext('## Controller\n\nIt actives the load signal on cycles 0 and 3');
gettext('04-Sys-SR-ld-paralell-serial');
gettext('Alhambra-II');
gettext('05-Sys-SR-ld-serial-paralell');
gettext('3bits constant value: 0');
gettext('Bus7-Split-all: Split the 7-bits bus into its wires');
gettext('## Example 5: Sys-SR load Register: Serial to paralell conversion\n\n\nExample of serial to paralell conversion of two numbers of 3-bits (value1 and value2).\nThe initial values are stored in two 3-bits system shift right registers, connected in serial  \nOn every clock cycle their bits are sent in serial (first value1 and then value 2)  \nThe RX reg is a system shift right register (with the load signal not enable). It receives the bits in serial  \nand output in paralell  \nThere are two system registers (reg1 and reg2) that store the received data (value1 and value2) respectivelly for  \ndisplaying the data on the LEDs  \nReg1 is loaded on cycle 4, and Reg2 on cycle 7\n\nThe data from the RX regs is captured by a data OSCILOSCOPE \n\nAfter 7 cycles the values 1 and 2 are stored on regs 1 and 2 respectivelly');
gettext('| Cycle    | 0       | 1       | 2      | 3      | 4     | 5     | 6     | 7     |\n|----------|---------|---------|--------|--------|-------|-------|-------|-------|\n| tx-reg   | 111 101 | 011 110 | 001 111| 000 111|000 011|000 001|000 000|000 000|\n| rx-reg   | 000     | 100     | 010    | 101    | 110   | 111   | 111   | 011   |\n| load     |  0      |  0      |  0     |  1     |  0    |  0    |  1    |  0    |\n| reg1     |  000    |  000    |  000   |  000   |  **101**  | 101   | 101   | 101   |\n| reg2     |  000    |  000    |  000   |  000   | 000   | 000   | 000   | **111**   |\n');
gettext('## Controller\n\nIt actives the load signal on cycles 3 and 6');
gettext('Serial transmission');
gettext('TX reg: Serial transmitter');
gettext('RX reg: Serial receiver');
gettext('Paralell data');
gettext('Reg1: It stores the Value 1');
gettext('Reg2: It stores the Value 2');
gettext('05-Sys-SR-ld-serial-paralell');
gettext('Alhambra-II');
gettext('06-Sys-SR-ld-serial-addition');
gettext('4bits constant value: 0');
gettext('Generic: 4-bits generic constant (0-15)');
gettext('Bus5-Split-all: Split the 5-bits bus into its wires');
gettext('04-Uint08: 4 bits unsigned integer extension to 8 bits. Verilog implementation');
gettext('## Example 6: Sys-SR load Register: Serial addition\n\nThe 3-bits values 5 and 7 are added serially. The result (12) is displayed on the LEDs  \n\nThe data from the RX regs is captured by a data OSCILOSCOPE \n\nAfter 4 cycles the result is displayed on the LEDs');
gettext('Convert the 4-bit value to  \nan 8-bit value (The most  \nsignificant bits are filled  \nwith 0)');
gettext('## Controller\n\nIt actives the load signal on cycle 4');
gettext('Result in paralell');
gettext('Previous carry bit');
gettext('Serial adder');
gettext('06-Sys-SR-ld-serial-addition');
gettext('Alhambra-II');
gettext('07-SR-manual-unary-counter');
gettext('## Example 7: SR Register: 4-bits Manual Unary counter\n\nThe unary counter is increased by one when the button is pressed');
gettext('Shift Right register');
gettext('4-bits Unary counter');
gettext('07-SR-manual-unary-counter');
gettext('Alhambra-II');
gettext('08-SR-rst-module5-unary');
gettext('Simplified-Heart-tic-hz-sys-32bits: Nominal periodic signal in hz');
gettext('Unit-hz-32bits: hz to cycles converter');
gettext('Heart-sys-zero-32bits: Generate a periodic signal of period T cycles. It starts at cycle 0. It never stops');
gettext('Sys-Delay-xN-32bits: The input tic is delayed N cycles');
gettext('Counter-M-x32: 32-bits M module counter with reset');
gettext('Inc1-32bit: Increment a 32-bits number by one');
gettext('AdderK-32bit: Adder of 32-bit operand and 32-bit constant');
gettext('Generic: 32-bits generic constant');
gettext('Adder-32bits: Adder of two operands of 32 bits');
gettext('Bus24-Join-8-16: Join the two buses into an 24-bits Bus');
gettext('Bus32-Split-8-24: Split the 28-bits bus into two buses of 8 and 24 wires');
gettext('Bus24-Split-16-8: Split the 24-bits bus into two buses of 16 and 8 wires');
gettext('Bus32-Join-8-24: Join the two buses into an 32-bits Bus');
gettext('Geu-32-Bits_v: 32-bit Unsigned Greather than or equal comparator. Verilog implementation');
gettext('start: Start signal: It goes from 1 to 0 when the system clock starts. 1 cycle pulse witch. Block implementation');
gettext('## Example 8: SR-rst Register: Module 5 Unary counter \n\nThe unary counter is increased every second  \nWhen it reaches `1111` it restarts from 0');
gettext('When the unary counter reaches its  \nmaximum value, it is reset, starting again  \nfrom 0. It is reset in the next second');
gettext('Emits 1 tic every second');
gettext('Input parameter: Milieconds  ');
gettext('Input parameter:  \nSystem Frequency');
gettext('Delay');
gettext('Start a new period');
gettext('Start at cycle 0!');
gettext('Repeat!');
gettext('Current period ended  \nStart a new one');
gettext('Periodo (in system clock cycles)');
gettext('Current cycle in the period  \n(0-T-1)');
gettext('Cycles to delay');
gettext('Delay finished!');
gettext('Machine state: ON/OFF');
gettext('RS Flip-Flop');
gettext('Circuit state:  \n* ON: working (1)\n* OFF: Not working (0)');
gettext('The counter has reached  \nthe number of cycles  \nto delay');
gettext('Maximum count  \nreached');
gettext('32-bits register');
gettext('If the max count is reached  \nand the cnt tic is received,  \nthe register is reset to 0');
gettext('External reset');
gettext('Initial value: 1');
gettext('Initial value: 0');
gettext('Falling edge');
gettext('08-SR-rst-manual-unary-counter-module-4');
gettext('08-SR-rst-manual-unary-counter-module-5');
gettext('08-SR-rst-module5-unary');
gettext('Alhambra-II');
gettext('09-SR-ld-serial-tx');
gettext('OR-BUS4-verilog: OR gate with 4-bits bus input. Verilog implementation');
gettext('TFF-verilog. System TFF with toggle input: It toogles on every system cycle if the input is active. Verilog implementation');
gettext('## Example 9: SR-ld Register: Serial transmitter-receiver\n\nExample of the serial transmision of the data `0xA` and its reception  \nThe recived data is shown on the LEDs.\n');
gettext('Initial state:  Load');
gettext('Next stages: Shift');
gettext('## Transmitter');
gettext('## Timming generator');
gettext('Data to transmit');
gettext('Serial LINE');
gettext('## Receiver');
gettext('Parallel to serial  \nconversion');
gettext('Serial to parallel  \nconversion');
gettext('Received  \nDATA');
gettext('Show the received  \ndata on the LEDs');
gettext('Show the data beign  \ntransmited on the LEDs');
gettext('## Controller');
gettext('Last state: capture  \nthe received data');
gettext('Load the transmitter with the  \ndata to transmit');
gettext('Shift the transmitter/receiver');
gettext('09-SR-ld-serial-tx');
gettext('Alhambra-II');
gettext('10-SR-ld-rst-serial-tx-rx-loop');
gettext('## Example 10: SR-ld-rst Register: Serial transmitter-receiver\n\nExample of the serial transmision of the data `0xA` and its reception  \nThe recived data is shown on the LEDs. This cycle is repeated indefinitelly\n');
gettext('State: Shift');
gettext('10-SR-ld-rst-serial-tx-rx-loop');
gettext('Alhambra-II');
gettext('11-SRL-manual-unary-counter-up-down');
gettext('A standard 2-to-1 encoder with nz (not-zero) output');
gettext('## Example 11: SLR Register: 4-bits Manual up down Unary counter\n\nThe unary counter is increased or decreased by means of the SW1 and SW2 buttons respectivelly');
gettext('Shift Left Right register');
gettext('2-1 encoder');
gettext('Shift left or right:  \n* 1: Shift left (dec)\n* 0: Shift right (inc)');
gettext('Update the counter  \non every button pushed');
gettext('## Truth table\n\n| i1 | i0 | out | nz |\n|----|----|-----|----|\n| 0  | 0  |  0  | 0  |\n| 0  | 1  |  0  | 1  |\n| 1  | 0  |  1  | 1  |\n| 1  | 1  |  1  | 1  |');
gettext('Alhambra-II');
gettext('12-SRL-rst-up-down-progress-bar');
gettext('Simplified-Heart-tic-ms-sys-32bits: Nominal periodic signal in mili seconds');
gettext('start: Start signal: It goes from 1 to 0 when the system clock starts. 1 cycle pulse witch');
gettext('System - D Flip-flop. Capture data every system clock cycle');
gettext('RS-FF-set. RS Flip-flop with priority set');
gettext('2-to-1 Multplexer (1-bit channels)');
gettext('Reg-rst-32: 32 bits Register with load and reset inputs');
gettext('Sys-reg-rst-32: 32 bits system register with reset');
gettext('2-to-1 Multplexer (32-bit channels)');
gettext('2-to-1 Multplexer (8-bit channels)');
gettext('2-to-1 Multplexer (4-bit channels)');
gettext('Bus32-Join-quarter: Join the four buses into an 32-bits Bus');
gettext('Bus32-Split-quarter: Split the 32-bits bus into four buses of 8 wires');
gettext('Sys-reg-32: 32 bits system register');
gettext('Unit-ms-32bits: ms to cycles converter');
gettext('## Example 12: SLR-rst Register: 4-bits up down progress bar\n\nA progress bar of 4 leds is incremented automatically. When it reach the maximum it is decremented.  \nThis cycle is repeated forever');
gettext('Transition 1: MAX value reached');
gettext('Transition 2: Min value reached');
gettext('Next state');
gettext('Transitions can only ocurr when  \nthe update signal is active');
gettext('Circuit refresh period');
gettext('## Circuit controller');
gettext('Priority on set');
gettext('Channel B');
gettext('Channel A');
gettext('00-Index');
gettext('01-Sys-SR-2bits-unary-counter');
gettext('11-SRL-manual-unary-counter-up-down');
gettext('12-SRL-rst-up-down-progress-bar');
